{"meta":{"title":"beeant的博文","subtitle":"用我微弱的力量去完善这个世界","description":"用我微弱的力量去完善这个世界","author":"Beeant","url":"http://beeant0512.github.io","root":"/"},"pages":[{"title":"关于","date":"2019-08-23T15:35:08.426Z","updated":"2019-06-08T06:55:28.000Z","comments":false,"path":"about/index.html","permalink":"http://beeant0512.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2019-08-23T15:34:30.442Z","updated":"2019-06-08T06:55:28.000Z","comments":false,"path":"categories/index.html","permalink":"http://beeant0512.github.io/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-08-23T15:34:56.763Z","updated":"2019-06-08T06:55:28.000Z","comments":false,"path":"repository/index.html","permalink":"http://beeant0512.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-08-23T15:34:45.018Z","updated":"2019-06-08T06:55:28.000Z","comments":false,"path":"tags/index.html","permalink":"http://beeant0512.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"pentaho server配置mysql数据库存储","slug":"pentaho-server配置mysql数据库存储","date":"2019-06-07T11:10:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2019/06/07/pentaho-server配置mysql数据库存储/","link":"","permalink":"http://beeant0512.github.io/2019/06/07/pentaho-server配置mysql数据库存储/","excerpt":"","text":"由于最近业务需要，接触到pentaho server,由于网上提供的配置方式都不是太完整可用，经过几经摸索，触碰到了一些可行的方式，顺便记录一下 pentaho server配置数据库存储的配置方式。1 数据库表创建执行pentaho/server/pentaho-server/data/mysql5 下的几个sql文件即可，网上大部分教程都会有pentaho_mart_mysql.sql 但是现在的版本基本上也没有这个文件了，忽略也不影响后续的使用。注意：各个数据库中的账号及密码可自行修改2 quartz配置修改修改pentaho/server/pentaho-server/pentaho-solutions/system/quartz/quartz.properties文件中的两处配置修改后的配置如下：1org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate1org.quartz.dataSource.myDS.jndiURL = Quartz3 mysql的Hibernate配置修改修改 pentaho/server/pentaho-server/pentaho-solutions/system/hibernate 下的 hibernate-settings.xml文件修改前1&lt;config-file&gt;system/hibernate/postgresql.hibernate.cfg.xml&lt;/config-file&gt;修改后1&lt;config-file&gt;system/hibernate/mysql5.hibernate.cfg.xml&lt;/config-file&gt;4 日志配置复制pentaho-solutions/system/dialects/mysql5/audit_sql.xml文件到pentaho-solutions/system目录下5 Jackrabbit数据库配置修改pentaho/server/pentaho-server/pentaho-solutions/system/jackrabbit/repository.xml文件修改项修改后结果Repositoryclass12345678910111213141516 &lt;param name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt; &lt;param name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/jackrabbit&quot;/&gt;…&lt;/FileSystem&gt;```| | DataStore | ``` &lt;DataStore class=&quot;org.apache.jackrabbit.core.data.db.DbDataStore&quot;&gt; &lt;param name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/jackrabbit&quot;/&gt;…&lt;/DataStore&gt;```|| Workspaces | &lt;FileSystem class=&quot;org.apache.jackrabbit.core.fs.db.DbFileSystem&quot;&gt; &lt;param name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt; &lt;param name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/jackrabbit&quot;/&gt;…&lt;/FileSystem&gt; || PersistenceManager (1st part) |…``` | | Versioning | ```…```| | PersistenceManager (2nd part) | ```…``` | | DatabaseJournal | `````` |","categories":[],"tags":[],"author":"Beeant"},{"title":"spring security权限注解","slug":"spring-security权限注解","date":"2018-11-26T02:17:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2018/11/26/spring-security权限注解/","link":"","permalink":"http://beeant0512.github.io/2018/11/26/spring-security权限注解/","excerpt":"","text":"spring security 内置权限注解方法类在org.springframework.security.access.expression中表达式说明* hasRole([role])当前账户有指定角色时返回true, 默认情况下，角色都是以ROLE_开头，当然也可以在修改DefaultWebSecurityExpressionHandler中修改defaultRolePrefix自定义角色前缀* hasAnyRole([role1,role2])当前账户有指定角色中的任意一个时返回true, 默认情况下，角色都是以ROLE_开头，当然也可以在修改DefaultWebSecurityExpressionHandler中修改defaultRolePrefix自定义角色前缀hasAuthority([authority])当前账户有指定权限时返回truehasAnyAuthority([authority1,authority2])当前账户有指定权限中任何一个时返回trueprincipal允许当前用户直接访问的对象主体authentication允许直接访问从SecurityContext获得的当前身份验证对象permitAll允许所有denyAll拒绝所有isAnonymous()是否匿名用户isRememberMe()当前是否被记住* isAuthenticated()是否已经登录isFullyAuthenticated()是否已经登录 或 被记住* hasPermission(Object target, Object permission)Returns true if the user has access to the provided target for the given permission. For example, hasPermission(domainObject, ‘read’)* hasPermission(Object targetId, String targetType, Object permission)Returns true if the user has access to the provided target for the given permission. For example, hasPermission(1, ‘com.example.domain.Message’, ‘read’)hasIpAddress([ip address])IP地址是否是？？？","categories":[{"name":"Spring","slug":"Spring","permalink":"http://beeant0512.github.io/categories/Spring/"}],"tags":[{"name":"spring","slug":"spring","permalink":"http://beeant0512.github.io/tags/spring/"},{"name":"springSecurity","slug":"springSecurity","permalink":"http://beeant0512.github.io/tags/springSecurity/"}],"author":"Beeant"},{"title":"android不显示标题栏","slug":"android不显示标题栏","date":"2018-10-04T04:48:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2018/10/04/android不显示标题栏/","link":"","permalink":"http://beeant0512.github.io/2018/10/04/android不显示标题栏/","excerpt":"","text":"在res/values/styles.xml中添加如下代码1234&lt;style name=&quot;AppTheme&quot;&gt; &lt;item name=&quot;windowActionBar&quot;&gt;false&lt;/item&gt; &lt;item name=&quot;windowNoTitle&quot;&gt;true&lt;/item&gt;&lt;/style&gt;在AndroidManifest.xml中的不要显示的activity结点中加android:theme=”@style/AppTheme.NoActionBar”1&lt;activity android:name=&quot;.MainActivity&quot; android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;这样在该activity中就不会显示标题了，如果多个别的activity中不显示也在其中添加即可转自 https://www.cnblogs.com/q149072205/p/5236025.html","categories":[{"name":"Android","slug":"Android","permalink":"http://beeant0512.github.io/categories/Android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://beeant0512.github.io/tags/android/"}],"author":"Beeant"},{"title":"springboot 集成java simon","slug":"springboot-集成java-simon","date":"2018-09-25T02:47:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2018/09/25/springboot-集成java-simon/","link":"","permalink":"http://beeant0512.github.io/2018/09/25/springboot-集成java-simon/","excerpt":"","text":"项目情况springboot （无xml配置，都是java代码的配置）gradle集成simon添加依赖123compile group: &apos;org.javasimon&apos;, name: &apos;javasimon-spring&apos;, version: &apos;4.1.4&apos;compile group: &apos;org.javasimon&apos;, name: &apos;javasimon-console-embed&apos;, version: &apos;4.1.4&apos;compile group: &apos;org.javasimon&apos;, name: &apos;javasimon-jdbc4&apos;, version: &apos;3.5.2&apos;添加配置文件1234567891011121314151617181920212223242526/** * @author xiaobiao * @version 2018/9/21 */@Configurationpublic class JavaSimonConfig &#123; // 定义AOP @Bean(name = \"monitoringAdvisor\") public DefaultPointcutAdvisor monitoringAdvisor() &#123; DefaultPointcutAdvisor monitoringAdvisor = new DefaultPointcutAdvisor(); monitoringAdvisor.setAdvice(new MonitoringInterceptor()); monitoringAdvisor.setPointcut(new MonitoredMeasuringPointcut()); return monitoringAdvisor; &#125; // 定义Servlet URL Mapping @Bean public ServletRegistrationBean dispatcherRegistration() &#123; ServletRegistrationBean registration = new ServletRegistrationBean(new SimonConsoleServlet()); registration.addInitParameter(\"url-prefix\", \"/javasimon\"); registration.addUrlMappings(\"/javasimon/*\"); return registration; &#125;&#125;","categories":[{"name":"Spring","slug":"Spring","permalink":"http://beeant0512.github.io/categories/Spring/"}],"tags":[{"name":"spring","slug":"spring","permalink":"http://beeant0512.github.io/tags/spring/"},{"name":"性能监控","slug":"性能监控","permalink":"http://beeant0512.github.io/tags/性能监控/"}],"author":"Beeant"},{"title":"springboot 启动小计","slug":"springboot-启动小计","date":"2018-09-21T02:06:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2018/09/21/springboot-启动小计/","link":"","permalink":"http://beeant0512.github.io/2018/09/21/springboot-启动小计/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576/* * * 尽量不要用xml来配置 * 如果一定要有一些配置的话，优先是用application.properties，application.yml * 在标注了@Configuration的类中，@Value注解将外部的一些配置加载到我们自己的类里面来，消除掉了依赖xml的配置 * * 思想，尽量将一个应用系统所有的配置，全部集中在一个application.properties配置文件中 * 我们以前的话，用了一堆技术，十几种技术，配置文件，就有十几种配置文件，散落在各种不同的地方 * 我们管理那么多分散开来的配置是很麻烦的 * * 将所有外部文件中的配置集中到一个application.properties中去，如果一定是需要做一些以前的xml完成的配置 * 在spring的applicationContext.xml里面去配置各种bean，老土了，不要这么干 * spring boot的思想是，对于类似上面的那种情况，全部基于注解来完成配置和相关的所有事情 * * application.properties和注解，完成所有的配置 * * @Configuration这个东东，其实就代替了以前的applicationContext.xml类似于这样的xml配置文件 * 有些以前在xml配置文件里的东西，你就给它放到application.properties配置文件里去 * @Configuration中，可以基于@Value注解将这些配置加载到类里面来 * 同时@Configuration中，可以基于@Bean注解，直接在代码层面声明各种bean，包括bean与bean之间的依赖关系 * 全部基于注解来完成装配 * */// @Configuration/* * * 这个注解代表了spring boot中的核心功能，auto configuration * * 它是说，确认可以启用这个auto configuration这个功能 * auto configuration，就是我们后面在spring boot源码剖析的阶段，要给大家重点剖析的 * auto configuration的核心思想，其实就是说，只要我们引入一个starter类的依赖，自动会根据我们引入了什么依赖 * 然后来判断说，我们要干什么事情，接着就自动给我们完成所有的配置 * * 比如说spring-boot-starter-web，引入了这个依赖 * 然后同时我们启用了auto configuration，此时就会根据说，我们引入了starter-web这个依赖 * 就认为说我们要开发一个web系统 * 此时就会自动给我们进行auto configuration，完成web系统需要的所有的配置 * 包括了所有依赖包的引入，spring mvc的配置，web.xml的配置，spring mvc+spring的整合，tomcat的配置 * * auto configuration，要实现的就是，尽量他自动按照约定给我们搞定一些事情 * 不需要我们去手动大量的配置xml * */// @EnableAutoConfiguration/* * * 这个注解是说，你如果启动应用程序之后，可以允许spring去自动扫描所有的包 * 去看一看包里面有没有加上spring相关注解的一些类 * 如果有相关的注解的话，就直接基于注解完成相关的bean创建以及依赖关系的装配 * 完全用注解+自动扫描的方式，替代掉了之前在applicationContext.xml里面大量配置bean * */// @ComponentScan/* * * 梳理一下spring boot启动的一个过程 * * （1）auto configuration完成了所有的配置：spirng mvc、spring、tomcat * （2）会将内嵌的tomcat准备好，同时将我们的这个工程部署到内嵌的tomcat中去的 * （3）接着就会启动内嵌的一个tomcat * （4）tomcat启动之后，就会初始化spring的核心容器，是跟spring mvc整合在一起的 * （5）spring核心容器就会去扫描所有的包，有没有带@RestController之类的注解，如果有，则将这个controller初始化 * （6）将我们的@RestController注解的类实例化成一个bean，注入自己的spirng容器 * （7）此时spring mvc的核心servlet，去对外接收请求的，接收到请求之后，就会将请求转发给对应的controller bean * （8）controller bean处理完请求之后，spring mvc将请求结果，返回给浏览器 * */ /* * 这个注解相当于是@Configuration+@EnableAutoConfiguration+@ComponentScan的组合 * 一般开发中，就是直接用一个@SpringBootApplication这个注解就可以了 */// @SpringBootApplication","categories":[{"name":"Spring","slug":"Spring","permalink":"http://beeant0512.github.io/categories/Spring/"}],"tags":[{"name":"spring","slug":"spring","permalink":"http://beeant0512.github.io/tags/spring/"}],"author":"Beeant"},{"title":"spring security4 多登录页方法","slug":"spring-security4-多登录页方法","date":"2017-04-11T00:42:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2017/04/11/spring-security4-多登录页方法/","link":"","permalink":"http://beeant0512.github.io/2017/04/11/spring-security4-多登录页方法/","excerpt":"","text":"对于多登陆页在网上查找了很多资料，但由于项目中的所有配置已经不使用xml方式了，因此，网上的很多方法都不试用了。最后，还是在spring security的文档中找到了解决方法。在配置文件中，配置多个配置实现。记录如下：1234567891011121314151617181920212223242526272829303132333435363738@EnableWebSecurity@EnableGlobalMethodSecurity(prePostEnabled = true)public class MultiHttpSecurityConfiguration &#123; @Autowired public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception &#123; auth .inMemoryAuthentication() .withUser(\"admin\").password(\"123456\").roles(\"USER\"); &#125; @Configuration @Order(1) public static class FormLoginWebSecurityConfigurerAdapter extends WebSecurityConfigurerAdapter &#123; @Override protected void configure(HttpSecurity http) throws Exception &#123; http.antMatcher(\"/user/**\") .authorizeRequests().anyRequest().authenticated() .and() .formLogin().loginPage(\"/user/login\").permitAll().and() .logout() .clearAuthentication(true) .logoutSuccessUrl(\"/user/index\") //退出登录后的默认网址是”/” .invalidateHttpSession(true);; &#125; &#125; @Configuration public static class AppLoginSecurityConfigurationAdapter extends WebSecurityConfigurerAdapter &#123; protected void configure(HttpSecurity http) throws Exception &#123; http.antMatcher(\"/app/**\") .authorizeRequests().anyRequest().authenticated() .and() .formLogin().loginPage(\"/app/login\").permitAll().and() .logout() .clearAuthentication(true) .logoutSuccessUrl(\"/app/index\") //退出登录后的默认网址是”/” .invalidateHttpSession(true); &#125; &#125;&#125;","categories":[{"name":"Spring","slug":"Spring","permalink":"http://beeant0512.github.io/categories/Spring/"}],"tags":[{"name":"spring","slug":"spring","permalink":"http://beeant0512.github.io/tags/spring/"}],"author":"Beeant"},{"title":"mac iterm2 开启颜色高亮方法","slug":"mac-iterm2-开启颜色高亮方法","date":"2017-04-01T00:46:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2017/04/01/mac-iterm2-开启颜色高亮方法/","link":"","permalink":"http://beeant0512.github.io/2017/04/01/mac-iterm2-开启颜色高亮方法/","excerpt":"","text":"编辑~/.bash_profile拷贝以下代码到~/.bash_profile中12345678#enables colorin the terminal bash shell exportexport CLICOLOR=1#sets up thecolor scheme for list exportexport LSCOLORS=gxfxcxdxbxegedabagacad#sets up theprompt color (currently a green similar to linux terminal)export PS1='\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;36m\\]\\w\\[\\033[00m\\]\\$ '#enables colorfor iTermexport TERM=xterm-color配置itermpreference-&gt;profiles-&gt;Terminal-&gt;xterm-new使~/.bash_profile生效1source ~/.bash_profile","categories":[{"name":"Mac","slug":"Mac","permalink":"http://beeant0512.github.io/categories/Mac/"}],"tags":[{"name":"mac iterm","slug":"mac-iterm","permalink":"http://beeant0512.github.io/tags/mac-iterm/"}],"author":"Beeant"},{"title":"dojo-模板使用小结","slug":"dojo-模板使用小结","date":"2016-11-08T00:48:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/11/08/dojo-模板使用小结/","link":"","permalink":"http://beeant0512.github.io/2016/11/08/dojo-模板使用小结/","excerpt":"","text":"dojo 模板使用小结在使用dojo的模板引擎时，需要引入&quot;dojox/dtl&quot;,&quot;dojox/dtl/Context&quot;,&quot;dojox/dtl/tag/logic&quot;dojox/dtl 还不清楚为什么非要引用dojox/dtl/Contextdojox/dtl/tab/logic 使用模板的逻辑标签，不引用会无法解析for,之类的逻辑标签123var template = new dtl.Template(dom.byId('menuTemplate').value);var context = new Context(&#123;menus: appMenu&#125;);template.render(context);模板12345&lt;textarea id=\"menuTemplate\" style=\"display: none;\"&gt;&#123;% for item in menus %&#125;&lt;li class=\"&#123;&#123;item.class&#125;&#125;\"&gt;&lt;a href=\"&#123;&#123;item.link&#125;&#125;\"&gt;&#123;&#123;item.name&#125;&#125;&lt;/a&gt;&lt;/li&gt;&#123;% endfor %&#125;&lt;/textarea&gt;","categories":[{"name":"dojo","slug":"dojo","permalink":"http://beeant0512.github.io/categories/dojo/"}],"tags":[{"name":"dojo","slug":"dojo","permalink":"http://beeant0512.github.io/tags/dojo/"}],"author":"Beeant"},{"title":"Sonar安装","slug":"Sonar安装","date":"2016-06-30T00:53:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/06/30/Sonar安装/","link":"","permalink":"http://beeant0512.github.io/2016/06/30/Sonar安装/","excerpt":"","text":"下载下载并解压SonarQube （例如： C:\\sonarqube\\server 或 /etc/sonarqube/server）启动SonarQube服务1234On Windows, execute:C:\\sonarqube\\server\\bin\\windows-x86-xx\\StartSonar.batOn other operating system, execute:/etc/sonarqube/server/bin/[OS]/sonar.sh consoleSonarQube Scanner下载并解压SonarQube Scanner （例如： C:\\sonarqube\\scanner 或 /etc/sonarqube/scanner）SonarQube的工程示例下载并解压SonarQube的工程示例 （例如： C:\\sonarqube\\example 或 /etc/sonarqube/example)分析项目12345678910111213On Windows:cd C:\\sonarqube\\example\\projects\\languages\\java\\sonar-runner\\java-sonar-runner-simpleC:\\sonarqube\\scanner\\bin\\sonar-scanner.bat cd C:\\sonarqube\\example\\projects\\languages\\javascript\\javascript-sonar-runnerC:\\sonarqube\\scanner\\bin\\sonar-scanner.bat On other operating system:cd /etc/sonarqube/example/projects/languages/java/sonar-runner/java-sonar-runner-simple/etc/sonarqube/scanner/bin/sonar-scanner cd /etc/sonar-examples/projects/languages/javascript/javascript-sonar-runner/etc/sonarqube/scanner/bin/sonar-scanner访问打开浏览器，访问结果 http://localhost:9000 (默认的管理员帐号/密码： admin/admin)","categories":[{"name":"Sonar","slug":"Sonar","permalink":"http://beeant0512.github.io/categories/Sonar/"}],"tags":[],"author":"Beeant"},{"title":"Mac下双网卡设置路由区分无线和有线","slug":"Mac下双网卡设置路由区分无线和有线","date":"2016-06-21T00:57:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/06/21/Mac下双网卡设置路由区分无线和有线/","link":"","permalink":"http://beeant0512.github.io/2016/06/21/Mac下双网卡设置路由区分无线和有线/","excerpt":"","text":"背景：用无线访问外网，用有线访问内网。由于有些ip只能通过内网访问，因此需要手动设置路由，实现指定ip(段）走有线。MAC route指令：查看当前路由表1netstat -nr添加路由12sudo route add -net 0.0.0.0 192.168.1.1 默认使用192.168.1.1网关sudo route add 10.64.20.0/24 10.17.12.254 内网地址使用内网网关","categories":[{"name":"Mac","slug":"Mac","permalink":"http://beeant0512.github.io/categories/Mac/"}],"tags":[{"name":"wifi","slug":"wifi","permalink":"http://beeant0512.github.io/tags/wifi/"}],"author":"Beeant"},{"title":"mac osx下apache下的坑: you don’t have permission to access / on this server","slug":"mac-osx下apache下的坑-you-don’t-have-permission-to-access-on-this-server","date":"2016-06-17T00:58:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/06/17/mac-osx下apache下的坑-you-don’t-have-permission-to-access-on-this-server/","link":"","permalink":"http://beeant0512.github.io/2016/06/17/mac-osx下apache下的坑-you-don’t-have-permission-to-access-on-this-server/","excerpt":"","text":"要在Directory指令里，增加一条 Require all granted，如下示：123456&lt;Directory &quot;/Users/jnovack/Sites/&quot;&gt; Options Indexes MultiViews AllowOverride All # OSX 10.10 / Apache 2.4 Require all granted&lt;/Directory&gt;","categories":[{"name":"Mac","slug":"Mac","permalink":"http://beeant0512.github.io/categories/Mac/"}],"tags":[{"name":"apache","slug":"apache","permalink":"http://beeant0512.github.io/tags/apache/"}],"author":"Beeant"},{"title":"Mac jenkins打包小计","slug":"Mac-jenkins打包小计","date":"2016-06-06T01:19:00.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/06/06/Mac-jenkins打包小计/","link":"","permalink":"http://beeant0512.github.io/2016/06/06/Mac-jenkins打包小计/","excerpt":"","text":"安装Homebrew12cd /usr/bin/sudo ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;安装p7zip1brew install p7zip安装ant1brew install ant安装ant-contrib-1.0b3拷贝ant-contrib-1.0b3到/usr/local/Cellar/ant/1.9.7/libexec目录下,其中1.9.7是ant的版本，可能有所不同","categories":[{"name":"Mac","slug":"Mac","permalink":"http://beeant0512.github.io/categories/Mac/"}],"tags":[{"name":"jenkins","slug":"jenkins","permalink":"http://beeant0512.github.io/tags/jenkins/"}],"author":"Beeant"},{"title":"TargetLink函数解密之-自建GUI修改Block定标信息","slug":"TargetLink函数解密之-自建GUI修改Block定标信息","date":"2016-04-21T15:21:17.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/04/21/TargetLink函数解密之-自建GUI修改Block定标信息/","link":"","permalink":"http://beeant0512.github.io/2016/04/21/TargetLink函数解密之-自建GUI修改Block定标信息/","excerpt":"","text":"之前介绍过get_tlcg_data, set_tlcg_data, dsdd之SelectObject，今日就使用一个简单的例子来，结合这三个函数来实现修改block的变量标定。1.建立GUI在建立GUI之前，如果还不会怎么建立GUI的话，执行脑补一下。新建GUI添加按钮2.设置回调函数设置Variable的回调函数 callback12345678910111213% --- Executes on button press in tl_variable.function tl_variable_Callback(hObject, eventdata, handles)% hObject handle to tl_variable (see GCBO)% eventdata reserved - to be defined in a future version of MATLAB% handles structure with handles and user data (see GUIDATA)tlcg_data = get_tlcg_data(gcbh);output = tlcg_data.output;[currentPath,bModified] = dsdd(&apos;SelectObject&apos;,&apos;CurrentPath&apos;,output.variable ,&apos;objectKind&apos;,&apos;Variable&apos;);if bModified == 1 output.variable = currentPath; tlcg_data.output = output; set_tlcg_data(gcbh, tlcg_data);end3.结果演示选中一个Block,此处选中了Gain模块 点击Variable按钮 #### 选中变量 #### 确定查看效果","categories":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/categories/Targetlink/"}],"tags":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/tags/Targetlink/"}]},{"title":"TargetLink函数解密之dsdd-SelectObject","slug":"TargetLink函数解密之dsdd-SelectObject","date":"2016-03-26T03:31:42.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/03/26/TargetLink函数解密之dsdd-SelectObject/","link":"","permalink":"http://beeant0512.github.io/2016/03/26/TargetLink函数解密之dsdd-SelectObject/","excerpt":"","text":"在targetLink的众多API中，个人觉得dsdd SelectObject是极其强大的一个，因为dsdd是链接dd文件和block之间的桥梁（暂且这样来形容）。通过dsdd SelectObject能够获取到dd中的各种属性，结合get_tlcg_data,set_tlcg_data从而实现修改block的各种属性（Variable,Class,Type,Scaling…)。函数简介对于SelectObject，官方是这样解释的123Opens a modal dialog with which a DD object can be selected. Which object are selectable is specified with keywords. This command is for internal use only, and its interface may be subject to future modifications.试译：通过关键字打开一个能够选择特定DD属性的模态框语法12[currentPath,bModified] = dsdd(&apos;SelectObject&apos;[,&apos;currentPath&apos;,&lt;currentPath&gt;],&apos;entryPath&apos;,&lt;entryPath&gt;,&lt;keyword1&gt;,&lt;keyword2&gt;, ... ,&lt;keywordn&gt;);[currentPath,bModified] = dsdd(&apos;SelectObject&apos;[,&apos;currentPath&apos;,&lt;currentPath&gt;],&apos;objectKind&apos;,&lt;objectKind&gt;,&lt;keyword1&gt;,&lt;keyword2&gt;, ... ,&lt;keywordn&gt;);输入参数说明NameTypeDescriptioncurrentPathstringcurrent value for reference propertyobjectKindobject kindstring or cell array of strings specifies object kind(s)entryPathDD pathrelative DD root where objects reside输出参数说明NameTypeDescriptioncurrentPathstringobject which has been selected (empty string if no object hase been selected)bModifiedboolean1 if user has selected an object, 0 if not#### 举例打开数据类型模态框，设置仅显示整型，且默认值Int8为选中12345&gt;&gt; selectedType = dsdd(&apos;SelectObject&apos;,&apos;CurrentPath&apos;,&apos;Int8&apos;,&apos;objectKind&apos;,&apos;Typedef&apos;,&apos;OnlyInteger&apos;)selectedType =UInt16 ObjectKind列表objectKind试译AccessFunctionDescribes a function that provides access to a variable in the production code.AccessFunctionTemplateTemplate for access functions.AcknowledgementDescribes the acknowledge behavior of a sender-receiver data element.ActionSpecifies an action that should be started when a message is received or an alarm expires.AlarmDescribes an OSEK OS alarm.AnnotationEnables to add annotations to the object that owns an instance of this object.ApplicationDataTypeComponentDefines one structure component of a data type on the application level.ApplicationDataTypeGroupUsed to group ApplicationDataType objects.ApplicationDataTypeDefines a data type on the application level.ApplicationErrorDescribes a user-defined error that is associated with an element of an interface.ApplicationModeDefines properties of a OSEK application mode.ApplicationDescribes an application built from code generated for one or more Simulink systems.AsynchronousServerCallPointDescribes an AUTOSAR asynchronous server call point.AsynchronousServerCallResultPointDescribes an AUTOSAR asynchronous server call result point.AutosarAccessPointDescribes an AUTOSAR access point.AutosarThis object keeps AUTOSAR-related objects.BaseTypesSpecifies base datatypes that are used. Each child object describes one particular base data type.BlockGroupUsed to group Block objects. BlockGroup objects correspond with subsystem blocks in Simulink models, or with Simulink models.BlockDescribes a Simulink block. In the Subsystems area, Block objects describe blocks in the Simulink system that has been processed by the Code Generator. In the Pool area, Block objects can be used for DD based code generation.BlockVariableDescribes a Simulink block variable.BuildDescribes an executable that was built to run the production code application.CalPrmAccessPointDescribes an AUTOSAR access point for a calibratable parameter.CalPrmComSpecDefines how a calprm element is accessed by the receiver.CalPrmElementDescribes a calibration parameter in a CalPrmInterface. Calibration parameters are typically declared as constants (read-only) in the source code. Nevertheless, such parameters may be modified by a calibration system.CalPrmInterfaceDefines an interface which contains calibratable parameters. The interface is provided by a CalPrm component and consumed by one or more application components.CalibrationMethodDefines a calibration method that can be used to access the target hardware, for example, InCircuit, SERAM, DSERAP, BSERAP.CatalogEntryObject representing a file reference with additional information.CatalogGroupUsed to group calatog objects.CatalogContains file references and file category information of files such as source code files (.h/.c) or AUTOSAR files (.arxml/.epc).ClientComSpecDescribes communication attributes for an operation call (client side).ClientPortDescribes an AUTOSAR require client-server port.ClientServerInterfaceDefines an interface which contains operations that a client may invoke on a server.CodeGenerationUnitGroupUsed to group CodeGenerationUnit objects.CodeGenerationUnitUsed to specify code generation form DDs.ConfigThe Config object contains general configuration data. Each DD has one Config object which is a child of the DD’s root.ContainerContains additional data attached to a DD object.CounterDescribes a counter that is used by the operating system.CoverageDataContains data for code coverage analysis.CustomCodeFileDescribes the content of a custom code file as used by TargetLink Custom Code blocks.CustomCodeSectionDescribes one custom code section.DDIncludeFileSpecifies a DD file which is automatically loaded (saved) when a DD project is opened (closed). DDIncludeFile objects are thus used to specify points of inclusion.DDUseCaseDefines a use case for the Data Dictionary Manager.DDUseCaseViewSpecifies a view for a given object kind in a DD use case, i.e. which child objects are visible.DataDictRoot element of a Data Dictionary workspace. There is only one DataDict object in each DD.DataElementDescribes a data element, for example, a member of a sender/receiver interface.DataFilterDefines a filter which can be applied to a received data elements, for example, to exclude values which are out of range.DataReadAccessDescribes an AUTOSAR data read access.DataReceivePointDescribes an AUTOSAR data receive point.DataReceiverComSpecDefines how a data element is accessed by the receiver.DataSendPointDescribes an AUTOSAR data send point.DataSenderComSpecDefines how a data element is accessed by the sender .DataTypeMapSpecifies a mapping between an ApplicationDataType object and a Typedef object.DataTypeMappingSetGroupUsed to group DataTypeMappingSet objects.DataTypeMappingSetRepresents a list of mappings between ApplicationDataType and Typedef objects, as well as a list of mappings between ModeDeclarationGroup and Typedef objects.DataVariantItemSpecifies one data variant item. The DataVariant’s DataVariantItem child objects with their variant IDs constitute one data variant.DataVariantDefines a data variant. Data variants can be switched at runtime.DataWriteAccessDescribes an AUTOSAR data write access.DeviceGroupUsed to group Device objects.DeviceDescribes a device in the model.DynamicComponentDefines a component of a struct or union.EMLFunctionGroupUsed to group EMLFunction objects.EMLFunctionDefines properties of an EML function.EventDescribes an operating system event.EventReceiverComSpecDefines how an event data element is accessed by the receiver.EventSenderComSpecDefines how an event data element is sent .ExchangeableWidthDefines a set of variable widths used for width invariant code generation.ExclusiveAreaDefines an exclusive area, that means a part of the code which is protected against interrupts. The actual type of protection mechanism is selected when performing the mapping onto the RTOS. .ExperimentSpecifies experiment configurations.FileInfoSpecifies how a file should be generated.FileSpecificationDescribes attributes of files which are needed to build an application, for example, generated code files, legacy code files, etc. .FunctionClassGroupUsed to group FunctionClass objects.FunctionClassDefines C attributes of a function in production code.FunctionClassTemplateFunctionClassTemplate objects specify which FunctionClass object should be used when no FunctionClass object is specified. Filter rules define when the FunctionClasstemplate object applies.FunctionGroupUsed to group Function objects.FunctionInstanceDescribes one instance of a function.FunctionIn the Pool area, Function objects describe how functions in the production code should be generated. In the Subsystems area, Function objects describe functions that were generated by the Code Generator.FunctionTemplateFunctionTemplate objects describe rules how functions that match a specified filter conditions should be generated.GenericGeneric objects are used to specify arbitrary data that are not defined by the Data Model.IFDataBlobSpecifies ASAP2 specific blob data information.IFDataSpecifies ASAP1b specific IF_DATA information (A2L_BLOB). The name contains the value of the name1 struct element which is usually ‘IF_DATA’.IFDataSourceBlobDescribes an ASAM-MCD 2MC source blob.IFDataTokenListContains an ASAM MCD 2MC (ASAP2) specific list of tokens (from A2L_TOKEN_LIST).ISRDescribes an interrupt service routine.IncludedCodeFileSpecifies header files which are included to a module.InterRunnableVariableReadAccessDescribes an AUTOSAR inter runnable data read access.InterRunnableVariableWriteAccessDescribes an AUTOSAR inter runnable data write access.InterfaceGroupUsed to group Interface objects.InterfaceVariableDescribes a variable which belongs to a function interface. The variable can be a global input or output, a formal or actual argument, or the function’s return value.LogVariableGroupUsed to group LogVariable objects.LogVariableDescribes a variable to be logged during simulations.LookupFunctionTemplateLookupFunctionTemplate objects describe rules how look-up functions that match a specified filter conditions should be generated.MemorySegmentDefines properties of an address range in target memory.MessageAccessorSpecifies how a message variable is accessed by the sender or the receiver.MessageDescribes a communication connection. In the Pool area, Message objects specify how communication connections should be generated. In the Subsystems area, Message object describe how communication connections have been implemented by the Code Generator.MessageVariableDefines a variable used to hold message data.ModeAccessPointDescribes an AUTOSAR mode access point.ModeDeclarationGroupGroupUsed to group ModeDeclarationGroup objects.ModeDeclarationGroupDefines a group of modes, which exist for a given application mode of the ECU, for example, INIT, RUN, TERMINATE, …ModeDeclarationDefines an available ECU mode, for example, INIT.ModeDisablingDependencySpecifies a mode that disables the RTE event this object belongs to.ModeElementDescribes an element of a sender/receiver interface which is used to communicate ECU modes (Init, .., Term) to a software component. In AUTOSAR, mode elements are called ‘ModeDeclarationGroupPrototypes’.ModeReceiverComSpecDescribes attributes for receiver communication.ModeReceiverPortDescribes an AUTOSAR mode receiver port.ModeRequestTypeMapSpecifies a mapping between a ModeDeclarationGroup object and a Typedef object.ModeSenderComSpecDescribes attributes for sender communication.ModeSenderPortDescribes an AUTOSAR mode sender port.ModeSwitchInterfaceDescribes an AUTOSAR mode switch interface.ModeSwitchPointDescribes an AUTOSAR mode switch point.ModelGroupUsed to group Model objects.ModelDescribes a Simulink model.ModuleGroupUsed to group Module objects.ModuleSecifies a module in production code.ModuleOwnerShipGroupUsed to group ModuleOwnerShip objects.ModuleOwnerShipSpecifies module ownership.ModuleTemplateTemplate for code modules.OILEntryDescribes one entry in a OIL file.OILFileContains the memory image of a complete OIL file.OperationArgumentDescribes an argument of a operation. Operations are elements of client/server interfaces, that means functions which a client component may invoke on a server component.OperationDescribes an operation. Operations are elements of client/server interfaces, that means functions which a client component may invoke on a server component.PageSwitchingInfoDescribes a code page which can be switched.PerInstanceMemoryVariableAccessDescribes an AUTOSAR per instance memory variable access.PoolThe Pool object is a child of the DD root and constitutes the Pool area in which data for code generation are specified.PortGroupUsed to group AUTOSAR port objects.PortDescribes a port of a Simulink system.PropertyValueListList of propertyname/value pairs. All property values are strings. Additional PropertyValueList objects can be inserted to create a hierarchical composition.ProtectionMechanismDefines a mechanism used to protect code sections against preemption by tasks or ISRs.ProvideCalPrmPortDescribes an AUTOSAR SWC port where a CalPrmInterface is provided.RTOSContains RTOS objects needed for multirate code generation.RasterDefines a measurement raster which can be used for data acquisition by a calibration system.ReceiverPortDescribes an AUTOSAR require sender-receiver port.RecordLayoutSpecifies how a table map for a look-up function should be generated.RequireCalPrmPortDescribes an AUTOSAR SWC port where a CalPrmInterface is required.RequirementInfoRequirementInfo objects keep Simulink RMI data.ResourceDescribes an OSEK OS resource.RootFunctionTemplateTemplate for root functions (STEP, INIT, RESTART, TERM, …).RteEventDescribes an RTE event.RunnableDescribes an AUTOSAR runnable.ScalingGroupUsed to group Scaling objects.ScalingSpecifies scaling parameters.SectionDescribes a linker section.SenderPortDescribes an AUTOSAR provide sender-receiver port.SenderReceiverInterfaceDefines an interface for sending and receiving data via ports.ServerComSpecDescribes communication attributes for an operation call (server side).ServerPortDescribes an AUTOSAR provide client-server port.SharedCalPrmVariableAccessDescribes an AUTOSAR inter runnable shared calibratable access.SoftwareComponentGroupUsed to group SoftwareComponent objects.SoftwareComponentDescribes an AUTOSAR software component including it’s internal behavior.StateflowNodeDescribes a state or subchart in a Statechart.StructTemplateTemplate for structs.SubStructTemplateTemplate for substructs.SubfunctionDescribes a subfunction called from a function instance.SubsystemConfigContains configuration data for a subsystem. This information is evaluated by the Code Generator.SubsystemObject containing the description of a generated or imported subsystem.SwRecordLayoutContentThis element is used together with SwRecordLayoutElements. It describes the serialization of the data (e.g. a look-up table axis) in the ECU memory.SwRecordLayoutElementDefines an element (group) in a record layout that describes the serialization of the data (e.g. a look-up table axis) in the ECU memory.SwRecordLayoutGroupUsed to group SwRecordLayout objects.SwRecordLayoutUsed to describe the various record layouts of the calibratable object (especially look-up table data) in the memory of the ECU.SymbolGroupUsed to group Symbol objects.SymbolDefines object kind symbol.SynchronousServerCallPointDescribes an AUTOSAR synchronous server call point.TaskDescribes a operating system task.TaskTemplateDefines properties of a task which are not explicitly defined in the model.TemplateGroupUsed to group template objects.TypedefComponentDefines a component of a struct or union data type.TypedefEnumValueDefines an element of an enum union data type.TypedefGroupUsed to group Typedef objects.TypedefSpecifies a data type. In the Pool area, Typedef objects serve as templates that describe how a data type should be generated. In the Subsystems area, Typedef objects describe how a data type was generated in the production code.TypedefTemplateSpecifies attributes of struct, enum, or union data types that are generated implicitly.UnitDefines a physical unit based on SI units.VariableClassGroupUsed to group VariableClass objects.VariableClassDefines C attributes of variables in the production code.VariableClassTemplateVariableClassTemplate objects specify which VariableClass object should be used when no VariableClass object is specified. Filter rules define when the VariableClasstemplate object applies.VariableGroupUsed to group Variable objects.VariableVariable objects describe variables in production code. In the Pool area, Variable objects serve as templates that specify how a variable should be generated. By associating a TargetLink block variable (for example, a block’s output) with a Variable object in the Pool area, the properties of the Variable object determine how the block variable should be represented in production code. In the Subsystems area, Variable objects describe how an instance of a variable was generated in production code.VariableTemplateVariableTemplate objects specify how implicit variables should be generated in the production code.VariantConfigDefines a variant configuration. This variant configuration is activated by setting the /Config/ TargetLink.ActiveVariantConfig property to the name of this object.VariantItemDefines a variant. VariantItem objects enable to associate varianted properties with variant configurations described by VariantConfig objects.WaitPointDescribes an AUTOSAR wait point.","categories":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/categories/Targetlink/"}],"tags":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/tags/Targetlink/"}]},{"title":"TargetLink函数解密之dsdd-函数列表","slug":"TargetLink函数解密之dsdd-函数列表","date":"2016-03-26T02:58:41.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/03/26/TargetLink函数解密之dsdd-函数列表/","link":"","permalink":"http://beeant0512.github.io/2016/03/26/TargetLink函数解密之dsdd-函数列表/","excerpt":"","text":"函数试译‘AddMessage’add message to DD message list‘AutoLoad’loads DD file for inspection‘CheckPointsOfInclusion’checks points of inclusion and updates POI table‘CheckRefs’check reference properties‘Clear’delete all objects in specified DD‘ClearAll’clear all DD trees‘ClearMessageList’clear messages in DD‘Close’close a project‘Copy’copy an object‘CopyToWorkspace’copy object into DD tree (workspace‘CopyTree’copy an object and its children‘Create’create an object‘CreateDD’create a new DD tree‘Delete’delete an object, property, or property variant‘DeleteDD’delete a DD tree‘DeleteMessage’delete n-th DD message‘Edit’open type specific object dialog‘Exist’check if object identifier is valid‘Export’invoke export module‘Find’search object‘FindNext’looks for next object in tree hierarchy‘FindRefs’find objects with reference property that point to a specified object‘Get’get a property‘GetActiveVariant’get the active variant configuration‘GetAll’get all properties in a struct‘GetAllDDs’get information about all DD trees‘GetAttribute’get attribute of an object‘GetAttributes’get attributes of an object‘GetAutoRenamePropertyIndices’get name indices of autorenamed property‘GetChildInfo’get struct with info about common child object/property list‘GetChildren’get vector with handles of children‘GetChildrenNames’get cell array of strings with children names‘GetCodeVariants’get current code variants‘GetContextObject’get context object for ref property‘GetCurrentDataModelRevNr’get the Data Model revision number of the specified DD‘GetCurrentVariantConfig’get current VariantConfig object‘GetDataModelRevNr’get the revision number of the current Data Model‘GetDataVariants’get current data variants‘GetDDAttribute’get attribute of specified DD tree‘GetDDAttributes’get information about a DD tree‘GetDefaultPath’returns default path for objects of specified object kind‘GetEnv’get environment variable‘GetLastMessage’get the last DD message‘GetListOfVariants’get list of variants of a property‘GetMaxNumMessages’get the max. number of messages‘GetMessage’get n-th DD message‘GetMessageList’get all messages from DD‘GetModified’check if any object is modified in specified tree‘GetNumMessages’get number of messages‘GetPointsOfInclusion’get points of inclusion‘GetPropertyNames’get cell array of strings with property names‘GetPropertyType’get type of property‘GetRawMode’check if raw mode is set‘GetUser’get DD user mode‘HasCurrentDataModelRevNr’checks if specified DD’s Data Model revision number corresponds with current Data Model revision number‘HasObjectDialog’checks if object dialog is available for specified object‘Help’show this screen‘Import’invoke import module‘IsCompatible’check if referred object is compatible‘IsDDFile’checks if a specified file is a valid DD file‘IsModified’check if DD has been modified‘IsPointOfInclusion’check if object is a point of inclusion‘Load’load DD file into object‘MakePointOfInclusion’make an object a point of inclusion‘Merge’merge an object into another‘Move’moves object to another parent‘Open’open a project‘OpenHelp’open on-line help for specified object, or property‘ResetToDefault’reset object to default value according to the Data Model‘Save’save object to file‘SelectDDTemplate’select DD template file‘SelectObject’select value for reference property‘Set’set property of an object‘SetAccessRights’set access attributes of object and/or children‘SetActiveVariant’set the active variant configuration‘SetAll’set properties with a struct‘SetAttribute’set attribute of an object‘SetAttributes’set attributes of an object‘SetDDAttribute’set attribute of specified DD tree‘SetEnv’set environment variable‘SetMaxNumMessages’set the max. number of messages‘SetModified’set modified attribute of DD tree‘SetPassword’set DD admin password‘SetRawMode’set raw mode‘SetUser’set DD to user or admin mode‘SortChildren’sorts an object’s children‘SuppressMessage’suppress specified message‘SyncAutoRenameChild’reorder autorenamed children‘SyncAutoRenameProperty’reorder autorenamed properties‘Unlock’unlock dsdd MEX DLL‘Upgrade’upgrade current DD to match current Data Model‘Validate’validate object‘ValidateTree’validate object and all subobjects‘WriteMessagesToFile’write DD messages to file","categories":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/categories/Targetlink/"}],"tags":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/tags/Targetlink/"}]},{"title":"Next主题 多说embed.js本地化","slug":"duoshuo-embed-1458569563555","date":"2016-03-21T14:12:43.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/03/21/duoshuo-embed-1458569563555/","link":"","permalink":"http://beeant0512.github.io/2016/03/21/duoshuo-embed-1458569563555/","excerpt":"","text":"看完多说评论不稳定，加载速度慢优化方法一篇文章，自己也试去对自己的next进行修改，但仅仅是为了获取多说embed.js的CDN而还要去注册七牛镜像，这是我自己不愿意的，所以退而求其次，实现本地化也是可以大大的提高多说评论加载速度的。以下就是我的操作过程。修改duoshuo.swig找到到themes/next/layout/_scripts/third-party/comments/duoshuo.swig文件删除文件中的123456789(function() &#123; var ds = document.createElement('script'); ds.type = 'text/javascript';ds.async = true; ds.id = 'duoshuo-script'; ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js'; ds.charset = 'UTF-8'; (document.getElementById('footer') || document.getElementsByTagName('body')[0]).appendChild(ds); &#125;)();然后在1&#123;% if theme.duoshuo_info.ua_enable %&#125;前加上123&#123;% if (theme.duoshuo and theme.duoshuo.shortname) or theme.duoshuo_shortname %&#125; &lt;script src=\"&#123; &#123; url_for(theme.js) &#125; &#125;/src/embed.js\"&gt;&lt;/script&gt;&#123;% endif %&#125;其中embed.js就是多说的embed.js代码获取embed.js浏览器访问http://static.duoshuo.com/embed.js，拷贝保存我就不说了，保存的路径保持和&lt;script src=&quot;{ { url_for(theme.js) } }/src/embed.js&quot;&gt;&lt;/script&gt;中的路径一直就可以了。由于hexo标签导致hexo g报错，无法生成页面，所以文章中被替换成了{ {","categories":[{"name":"hexo","slug":"hexo","permalink":"http://beeant0512.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://beeant0512.github.io/tags/hexo/"}]},{"title":"Next主题Tags/Categories Cannot GET /tags/","slug":"1458481810166","date":"2016-03-20T13:50:10.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/03/20/1458481810166/","link":"","permalink":"http://beeant0512.github.io/2016/03/20/1458481810166/","excerpt":"","text":"步骤一新建一个页面，命名为 tags/categories 。命令如下：12$ hexo new page \"tags\"$ hexo new page \"categories\"步骤二编辑刚新建的页面，将页面的类型设置为 tags/categories ，主题将自动为这个页面显示标签云。页面内容如下：12345---title: tagsdate: 2016-03-20 22:01:01type: \"tags\"---12345---title: categoriesdate: 2016-03-20 22:01:01type: \"categories\"---注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：123456---title: Tagclouddate: 2016-03-20 22:01:01type: \"tags\"comments: false---123456---title: Tagclouddate: 2016-03-20 22:01:01type: \"categories\"comments: false---步骤三在菜单中添加链接。编辑 主题配置文件 ，添加 tags/categories 到 menu 中，如下:12345menu: home: / categories: /categories archives: /archives tags: /tagsz摘自: http://www.zhihu.com/question/29017171","categories":[{"name":"hexo","slug":"hexo","permalink":"http://beeant0512.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://beeant0512.github.io/tags/hexo/"}]},{"title":"Windows Hexo Github发布问题","slug":"hexodeploy-1458477824991","date":"2016-03-20T12:43:44.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/03/20/hexodeploy-1458477824991/","link":"","permalink":"http://beeant0512.github.io/2016/03/20/hexodeploy-1458477824991/","excerpt":"","text":"1.工欲善其事必先利其器安装插件 hexo-deployer-git2.设置_config.yml1234deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master3.生成SSH Key打开Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件。Windows下默认在C:\\Users\\Yourname\\.ssh路径1ls -al ~/.ssh输入以下指令（邮箱就是你注册Github时候的邮箱）后，一路回车：1ssh-keygen -t rsa -C \"your email address\"3.然后键入以下指令：1ssh-agent -s4.拷贝id_rsa.pub内容，在github中添加SSH key,具体操作看官方说明1clip &lt; ~/.ssh/id_rsa.pub4.提交hexo deploycd 到bolg路径中执行hexo generate``hexo deploy一定要使用Gitbash提交 使用cmd提交会出错","categories":[{"name":"hexo","slug":"hexo","permalink":"http://beeant0512.github.io/categories/hexo/"},{"name":"github","slug":"hexo/github","permalink":"http://beeant0512.github.io/categories/hexo/github/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://beeant0512.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://beeant0512.github.io/tags/github/"}]},{"title":"TargetLink函数解密 之 set_tlcg_data","slug":"TargetLink函数解密之-set-tlcg-data","date":"2016-03-17T14:23:31.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/03/17/TargetLink函数解密之-set-tlcg-data/","link":"","permalink":"http://beeant0512.github.io/2016/03/17/TargetLink函数解密之-set-tlcg-data/","excerpt":"","text":"set_tlcg_dataset_tlcg_data是用于设置TargetLink模块或Stateflow对象的配置属性的一个函数，其语法如下：1set_tlcg_data(block,data,bCheck,newPropNames)输入参数1block 模块的路径、或模块/Stateflow的操作句柄,通过gcb、gcbh可获得1data 需要设置的数据,具体结构可使用get_tlcg_data获得12bCheck if set to 1, data will be checked for consistency (set to 0 if nargin == 2)newPropNames1bSync 启用/停用同步输出参数1data 模块的数据1info 信息（只有当bSync=true时）1msgStrunc 在数据收集时所产生的信息Targetlink和Stateflow的返回数据是不一样的info数据1info.hVariable DD中'variable'的句柄1info.hClass DD中'class'的句柄1info.hType DD中'type'的句柄1info.hScaling DD中'scaling'的句柄1info.bWritable 所有属性的可写标志位1info.bWritable.&lt;property&gt;各属性是否可写的信息1info.bInteger 是否是整型Int8, Int16, Int32, UInt8, UInt16，UInt321info.sBaseTypeRename Path of BaseTypeRename if it exists, otherwise ''举例:12345TL_Gain模块的数据主要是'output'和'gain'.data.output.&lt;blockproperties&gt;data.gain.&lt;properties&gt;info.output.&lt;properties&gt;info.gain.&lt;properties&gt;123未配置的Stateflow对象的数据data.&lt;blockproperties&gt;info.&lt;blockproperties&gt;更多内容参看 set_tlcg_data","categories":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/categories/Targetlink/"}],"tags":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/tags/Targetlink/"}]},{"title":"TargetLink函数解密 之 get_tlcg_data","slug":"TargetLink函数解密之-get-tlcg-data","date":"2016-03-15T15:18:07.000Z","updated":"2019-06-08T06:55:28.000Z","comments":true,"path":"2016/03/15/TargetLink函数解密之-get-tlcg-data/","link":"","permalink":"http://beeant0512.github.io/2016/03/15/TargetLink函数解密之-get-tlcg-data/","excerpt":"","text":"get_tlcg_dataget_tlcg_data是用于获取TargetLink模块或Stateflow对象的配置属性的一个函数，其语法如下：1[data, info, msgStruct] = get_tlcg_data(block, bSync)输入参数1block 模块的路径、或模块/Stateflow的操作句柄,通过gcb、gcbh可获得1bSync 启用/停用同步输出参数1data 模块的数据1info 信息（只有当bSync=true时）1msgStrunc 在数据收集时所产生的信息Targetlink和Stateflow的返回数据是不一样的info数据1info.hVariable DD中'variable'的句柄1info.hClass DD中'class'的句柄1info.hType DD中'type'的句柄1info.hScaling DD中'scaling'的句柄1info.bWritable 所有属性的可写标志位1info.bWritable.&lt;property&gt;各属性是否可写的信息1info.bInteger 是否是整型Int8, Int16, Int32, UInt8, UInt16，UInt321info.sBaseTypeRename Path of BaseTypeRename if it exists, otherwise ''举例:12345TL_Gain模块的数据主要是'output'和'gain'.data.output.&lt;blockproperties&gt;data.gain.&lt;properties&gt;info.output.&lt;properties&gt;info.gain.&lt;properties&gt;123未配置的Stateflow对象的数据data.&lt;blockproperties&gt;info.&lt;blockproperties&gt;更多内容参看 set_tlcg_data","categories":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/categories/Targetlink/"}],"tags":[{"name":"Targetlink","slug":"Targetlink","permalink":"http://beeant0512.github.io/tags/Targetlink/"}]}]}