<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>beeant的博文</title>
  
  <subtitle>用我微弱的力量去完善这个世界</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://beeant0512.github.io/"/>
  <updated>2019-06-08T06:55:28.000Z</updated>
  <id>http://beeant0512.github.io/</id>
  
  <author>
    <name>Beeant</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pentaho server配置mysql数据库存储</title>
    <link href="http://beeant0512.github.io/2019/06/07/pentaho-server%E9%85%8D%E7%BD%AEmysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8/"/>
    <id>http://beeant0512.github.io/2019/06/07/pentaho-server配置mysql数据库存储/</id>
    <published>2019-06-07T11:10:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>由于最近业务需要，接触到pentaho server,由于网上提供的配置方式都不是太完整可用，经过几经摸索，触碰到了一些可行的方式，顺便记录一下 pentaho server配置数据库存储的配置方式。</p><h3 id="1-数据库表创建"><a href="#1-数据库表创建" class="headerlink" title="1 数据库表创建"></a>1 数据库表创建</h3><p>执行<code>pentaho/server/pentaho-server/data/mysql5</code> 下的几个sql文件即可，网上大部分教程都会有<code>pentaho_mart_mysql.sql</code> 但是现在的版本基本上也没有这个文件了，忽略也不影响后续的使用。<br>注意：各个数据库中的账号及密码可自行修改</p><h3 id="2-quartz配置修改"><a href="#2-quartz配置修改" class="headerlink" title="2 quartz配置修改"></a>2 quartz配置修改</h3><p>修改<code>pentaho/server/pentaho-server/pentaho-solutions/system/quartz/quartz.properties</code>文件中的两处配置<br>修改后的配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.quartz.dataSource.myDS.jndiURL = Quartz</span><br></pre></td></tr></table></figure><h3 id="3-mysql的Hibernate配置修改"><a href="#3-mysql的Hibernate配置修改" class="headerlink" title="3 mysql的Hibernate配置修改"></a>3 mysql的Hibernate配置修改</h3><p>修改 <code>pentaho/server/pentaho-server/pentaho-solutions/system/hibernate</code> 下的 <code>hibernate-settings.xml</code>文件</p><p>修改前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;config-file&gt;system/hibernate/postgresql.hibernate.cfg.xml&lt;/config-file&gt;</span><br></pre></td></tr></table></figure><p>修改后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;config-file&gt;system/hibernate/mysql5.hibernate.cfg.xml&lt;/config-file&gt;</span><br></pre></td></tr></table></figure><h3 id="4-日志配置"><a href="#4-日志配置" class="headerlink" title="4 日志配置"></a>4 日志配置</h3><p>复制<code>pentaho-solutions/system/dialects/mysql5/audit_sql.xml</code>文件到<code>pentaho-solutions/system</code>目录下</p><h3 id="5-Jackrabbit数据库配置"><a href="#5-Jackrabbit数据库配置" class="headerlink" title="5 Jackrabbit数据库配置"></a>5 Jackrabbit数据库配置</h3><p>修改<code>pentaho/server/pentaho-server/pentaho-solutions/system/jackrabbit/repository.xml</code>文件</p><table><thead><tr><th>修改项</th><th>修改后结果</th></tr></thead><tbody><tr><td>Repository</td><td><figure class="highlight plain"><figcaption><span>class</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">     &lt;param name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;</span><br><span class="line">     &lt;param name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/jackrabbit&quot;/&gt;</span><br><span class="line">…</span><br><span class="line">&lt;/FileSystem&gt;</span><br><span class="line">```| </span><br><span class="line">| DataStore | ``` &lt;DataStore class=&quot;org.apache.jackrabbit.core.data.db.DbDataStore&quot;&gt;</span><br><span class="line">    &lt;param name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/jackrabbit&quot;/&gt;</span><br><span class="line">…</span><br><span class="line">&lt;/DataStore&gt;</span><br><span class="line">```|</span><br><span class="line">| Workspaces | &lt;FileSystem class=&quot;org.apache.jackrabbit.core.fs.db.DbFileSystem&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;</span><br><span class="line">      &lt;param name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/jackrabbit&quot;/&gt;</span><br><span class="line">…</span><br><span class="line">&lt;/FileSystem&gt; |</span><br><span class="line">| PersistenceManager (1st part) |</span><br></pre></td></tr></table></figure></td></tr></tbody></table><persistencemanager class="org.apache.jackrabbit.core.persistence.bundle.MySqlPersistenceManager"><param name="url" value="jdbc:mysql://localhost:3306/jackrabbit">…</persistencemanager>``` | | Versioning | ```<filesystem class="org.apache.jackrabbit.core.fs.db.DbFileSystem"><param name="driver" value="com.mysql.jdbc.Driver"><param name="url" value="jdbc:mysql://localhost:3306/jackrabbit">…</filesystem>```| | PersistenceManager (2nd part) | ```<persistencemanager class="org.apache.jackrabbit.core.persistence.bundle.MySqlPersistenceManager"><param name="url" value="jdbc:mysql://localhost:3306/jackrabbit">…</persistencemanager>``` | | DatabaseJournal | ```<journal class="org.apache.jackrabbit.core.journal.DatabaseJournal"><param name="revision" value="${rep.home}/revision.log"><param name="driver" value="com.mysql.jdbc.Driver"><param name="url" value="jdbc:mysql://localhost:3306/jackrabbit"><param name="user" value="jcr_user"><param name="password" value="password"><param name="schema" value="mysql"><param name="schemaObjectPrefix" value="J_C_"></journal>``` |<!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;由于最近业务需要，接触到pentaho server,由于网上提供的配置方式都不是太完整可用，经过几经摸索，触碰到了一些可行的方式，顺便记录一下 pe
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spring security权限注解</title>
    <link href="http://beeant0512.github.io/2018/11/26/spring-security%E6%9D%83%E9%99%90%E6%B3%A8%E8%A7%A3/"/>
    <id>http://beeant0512.github.io/2018/11/26/spring-security权限注解/</id>
    <published>2018-11-26T02:17:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>spring security 内置权限注解</p><p>方法类在<code>org.springframework.security.access.expression</code>中</p><table><thead><tr><th>表达式</th><th>说明</th></tr></thead><tbody><tr><td>* hasRole([role])</td><td>当前账户有指定角色时返回<code>true</code>, 默认情况下，角色都是以<code>ROLE_</code>开头，当然也可以在修改<code>DefaultWebSecurityExpressionHandler</code>中修改<code>defaultRolePrefix</code>自定义角色前缀</td></tr><tr><td>* hasAnyRole([role1,role2])</td><td>当前账户有指定角色中的任意一个时返回<code>true</code>, 默认情况下，角色都是以<code>ROLE_</code>开头，当然也可以在修改<code>DefaultWebSecurityExpressionHandler</code>中修改<code>defaultRolePrefix</code>自定义角色前缀</td></tr><tr><td>hasAuthority([authority])</td><td>当前账户有指定权限时返回<code>true</code></td></tr><tr><td>hasAnyAuthority([authority1,authority2])</td><td>当前账户有指定权限中任何一个时返回<code>true</code></td></tr><tr><td>principal</td><td>允许当前用户直接访问的对象主体</td></tr><tr><td>authentication</td><td>允许直接访问从SecurityContext获得的当前身份验证对象</td></tr><tr><td>permitAll</td><td>允许所有</td></tr><tr><td>denyAll</td><td>拒绝所有</td></tr><tr><td>isAnonymous()</td><td>是否匿名用户</td></tr><tr><td>isRememberMe()</td><td>当前是否被记住</td></tr><tr><td>* isAuthenticated()</td><td>是否已经登录</td></tr><tr><td>isFullyAuthenticated()</td><td>是否已经登录 或 被记住</td></tr><tr><td>* hasPermission(Object target, Object permission)</td><td>Returns true if the user has access to the provided target for the given permission. For example, hasPermission(domainObject, ‘read’)</td></tr><tr><td>* hasPermission(Object targetId, String targetType, Object permission)</td><td>Returns true if the user has access to the provided target for the given permission. For example, hasPermission(1, ‘com.example.domain.Message’, ‘read’)</td></tr><tr><td>hasIpAddress([ip address])</td><td>IP地址是否是？？？</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;spring security 内置权限注解&lt;/p&gt;&lt;p&gt;方法类在&lt;code&gt;org.springframework.security.access.
      
    
    </summary>
    
      <category term="Spring" scheme="http://beeant0512.github.io/categories/Spring/"/>
    
    
      <category term="spring" scheme="http://beeant0512.github.io/tags/spring/"/>
    
      <category term="springSecurity" scheme="http://beeant0512.github.io/tags/springSecurity/"/>
    
  </entry>
  
  <entry>
    <title>android不显示标题栏</title>
    <link href="http://beeant0512.github.io/2018/10/04/android%E4%B8%8D%E6%98%BE%E7%A4%BA%E6%A0%87%E9%A2%98%E6%A0%8F/"/>
    <id>http://beeant0512.github.io/2018/10/04/android不显示标题栏/</id>
    <published>2018-10-04T04:48:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><ol><li><p>在res/values/styles.xml中添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style name=&quot;AppTheme&quot;&gt;</span><br><span class="line">    &lt;item name=&quot;windowActionBar&quot;&gt;false&lt;/item&gt;</span><br><span class="line">    &lt;item name=&quot;windowNoTitle&quot;&gt;true&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>在AndroidManifest.xml中的不要显示的activity结点中加android:theme=”@style/AppTheme.NoActionBar”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity android:name=&quot;.MainActivity&quot; android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</span><br></pre></td></tr></table></figure></li></ol><p>这样在该activity中就不会显示标题了，如果多个别的activity中不显示也在其中添加即可</p><p>转自 <a href="https://www.cnblogs.com/q149072205/p/5236025.html" target="_blank" rel="noopener">https://www.cnblogs.com/q149072205/p/5236025.html</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;在res/values/styles.xml中添加如下代码&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="Android" scheme="http://beeant0512.github.io/categories/Android/"/>
    
    
      <category term="android" scheme="http://beeant0512.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>springboot 集成java simon</title>
    <link href="http://beeant0512.github.io/2018/09/25/springboot-%E9%9B%86%E6%88%90java-simon/"/>
    <id>http://beeant0512.github.io/2018/09/25/springboot-集成java-simon/</id>
    <published>2018-09-25T02:47:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h3 id="项目情况"><a href="#项目情况" class="headerlink" title="项目情况"></a>项目情况</h3><ul><li>springboot （无xml配置，都是java代码的配置）</li><li>gradle</li></ul><h3 id="集成simon"><a href="#集成simon" class="headerlink" title="集成simon"></a>集成simon</h3><p>添加依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">compile group: &apos;org.javasimon&apos;, name: &apos;javasimon-spring&apos;, version: &apos;4.1.4&apos;</span><br><span class="line">compile group: &apos;org.javasimon&apos;, name: &apos;javasimon-console-embed&apos;, version: &apos;4.1.4&apos;</span><br><span class="line">compile group: &apos;org.javasimon&apos;, name: &apos;javasimon-jdbc4&apos;, version: &apos;3.5.2&apos;</span><br></pre></td></tr></table></figure><p>添加配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiaobiao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 2018/9/21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaSimonConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义AOP</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"monitoringAdvisor"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultPointcutAdvisor <span class="title">monitoringAdvisor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DefaultPointcutAdvisor monitoringAdvisor = <span class="keyword">new</span> DefaultPointcutAdvisor();</span><br><span class="line">        monitoringAdvisor.setAdvice(<span class="keyword">new</span> MonitoringInterceptor());</span><br><span class="line">        monitoringAdvisor.setPointcut(<span class="keyword">new</span> MonitoredMeasuringPointcut());</span><br><span class="line">        <span class="keyword">return</span> monitoringAdvisor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义Servlet URL Mapping</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">dispatcherRegistration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ServletRegistrationBean registration = <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> SimonConsoleServlet());</span><br><span class="line">        registration.addInitParameter(<span class="string">"url-prefix"</span>, <span class="string">"/javasimon"</span>);</span><br><span class="line">        registration.addUrlMappings(<span class="string">"/javasimon/*"</span>);</span><br><span class="line">        <span class="keyword">return</span> registration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;项目情况&quot;&gt;&lt;a href=&quot;#项目情况&quot; class=&quot;headerlink&quot; title=&quot;项目情况&quot;&gt;&lt;/a&gt;项目情况&lt;/h3&gt;&lt;ul
      
    
    </summary>
    
      <category term="Spring" scheme="http://beeant0512.github.io/categories/Spring/"/>
    
    
      <category term="spring" scheme="http://beeant0512.github.io/tags/spring/"/>
    
      <category term="性能监控" scheme="http://beeant0512.github.io/tags/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>springboot 启动小计</title>
    <link href="http://beeant0512.github.io/2018/09/21/springboot-%E5%90%AF%E5%8A%A8%E5%B0%8F%E8%AE%A1/"/>
    <id>http://beeant0512.github.io/2018/09/21/springboot-启动小计/</id>
    <published>2018-09-21T02:06:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 尽量不要用xml来配置</span></span><br><span class="line"><span class="comment"> * 如果一定要有一些配置的话，优先是用application.properties，application.yml</span></span><br><span class="line"><span class="comment"> * 在标注了@Configuration的类中，@Value注解将外部的一些配置加载到我们自己的类里面来，消除掉了依赖xml的配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 思想，尽量将一个应用系统所有的配置，全部集中在一个application.properties配置文件中</span></span><br><span class="line"><span class="comment"> * 我们以前的话，用了一堆技术，十几种技术，配置文件，就有十几种配置文件，散落在各种不同的地方</span></span><br><span class="line"><span class="comment"> * 我们管理那么多分散开来的配置是很麻烦的</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 将所有外部文件中的配置集中到一个application.properties中去，如果一定是需要做一些以前的xml完成的配置</span></span><br><span class="line"><span class="comment"> * 在spring的applicationContext.xml里面去配置各种bean，老土了，不要这么干</span></span><br><span class="line"><span class="comment"> * spring boot的思想是，对于类似上面的那种情况，全部基于注解来完成配置和相关的所有事情</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * application.properties和注解，完成所有的配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @Configuration这个东东，其实就代替了以前的applicationContext.xml类似于这样的xml配置文件</span></span><br><span class="line"><span class="comment"> * 有些以前在xml配置文件里的东西，你就给它放到application.properties配置文件里去</span></span><br><span class="line"><span class="comment"> * @Configuration中，可以基于@Value注解将这些配置加载到类里面来</span></span><br><span class="line"><span class="comment"> * 同时@Configuration中，可以基于@Bean注解，直接在代码层面声明各种bean，包括bean与bean之间的依赖关系</span></span><br><span class="line"><span class="comment"> * 全部基于注解来完成装配</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @Configuration</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 这个注解代表了spring boot中的核心功能，auto configuration</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 它是说，确认可以启用这个auto configuration这个功能</span></span><br><span class="line"><span class="comment"> * auto configuration，就是我们后面在spring boot源码剖析的阶段，要给大家重点剖析的</span></span><br><span class="line"><span class="comment"> * auto configuration的核心思想，其实就是说，只要我们引入一个starter类的依赖，自动会根据我们引入了什么依赖</span></span><br><span class="line"><span class="comment"> * 然后来判断说，我们要干什么事情，接着就自动给我们完成所有的配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 比如说spring-boot-starter-web，引入了这个依赖</span></span><br><span class="line"><span class="comment"> * 然后同时我们启用了auto configuration，此时就会根据说，我们引入了starter-web这个依赖</span></span><br><span class="line"><span class="comment"> * 就认为说我们要开发一个web系统</span></span><br><span class="line"><span class="comment"> * 此时就会自动给我们进行auto configuration，完成web系统需要的所有的配置</span></span><br><span class="line"><span class="comment"> * 包括了所有依赖包的引入，spring mvc的配置，web.xml的配置，spring mvc+spring的整合，tomcat的配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * auto configuration，要实现的就是，尽量他自动按照约定给我们搞定一些事情</span></span><br><span class="line"><span class="comment"> * 不需要我们去手动大量的配置xml</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @EnableAutoConfiguration</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 这个注解是说，你如果启动应用程序之后，可以允许spring去自动扫描所有的包</span></span><br><span class="line"><span class="comment"> * 去看一看包里面有没有加上spring相关注解的一些类</span></span><br><span class="line"><span class="comment"> * 如果有相关的注解的话，就直接基于注解完成相关的bean创建以及依赖关系的装配</span></span><br><span class="line"><span class="comment"> * 完全用注解+自动扫描的方式，替代掉了之前在applicationContext.xml里面大量配置bean</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @ComponentScan</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 梳理一下spring boot启动的一个过程</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * （1）auto configuration完成了所有的配置：spirng mvc、spring、tomcat</span></span><br><span class="line"><span class="comment"> * （2）会将内嵌的tomcat准备好，同时将我们的这个工程部署到内嵌的tomcat中去的</span></span><br><span class="line"><span class="comment"> * （3）接着就会启动内嵌的一个tomcat</span></span><br><span class="line"><span class="comment"> * （4）tomcat启动之后，就会初始化spring的核心容器，是跟spring mvc整合在一起的</span></span><br><span class="line"><span class="comment"> * （5）spring核心容器就会去扫描所有的包，有没有带@RestController之类的注解，如果有，则将这个controller初始化</span></span><br><span class="line"><span class="comment"> * （6）将我们的@RestController注解的类实例化成一个bean，注入自己的spirng容器</span></span><br><span class="line"><span class="comment"> * （7）此时spring mvc的核心servlet，去对外接收请求的，接收到请求之后，就会将请求转发给对应的controller bean</span></span><br><span class="line"><span class="comment"> * （8）controller bean处理完请求之后，spring mvc将请求结果，返回给浏览器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 这个注解相当于是@Configuration+@EnableAutoConfiguration+@ComponentScan的组合</span></span><br><span class="line"><span class="comment"> * 一般开发中，就是直接用一个@SpringBootApplication这个注解就可以了</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @SpringBootApplication</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Spring" scheme="http://beeant0512.github.io/categories/Spring/"/>
    
    
      <category term="spring" scheme="http://beeant0512.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>spring security4 多登录页方法</title>
    <link href="http://beeant0512.github.io/2017/04/11/spring-security4-%E5%A4%9A%E7%99%BB%E5%BD%95%E9%A1%B5%E6%96%B9%E6%B3%95/"/>
    <id>http://beeant0512.github.io/2017/04/11/spring-security4-多登录页方法/</id>
    <published>2017-04-11T00:42:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>对于多登陆页在网上查找了很多资料，但由于项目中的所有配置已经不使用xml方式了，因此，网上的很多方法都不试用了。</p><p>最后，还是在spring security的文档中找到了解决方法。在配置文件中，配置多个配置实现。</p><p>记录如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiHttpSecurityConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureGlobal</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth</span><br><span class="line">                .inMemoryAuthentication()</span><br><span class="line">                .withUser(<span class="string">"admin"</span>).password(<span class="string">"123456"</span>).roles(<span class="string">"USER"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="meta">@Order</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">FormLoginWebSecurityConfigurerAdapter</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            http.antMatcher(<span class="string">"/user/**"</span>)</span><br><span class="line">                    .authorizeRequests().anyRequest().authenticated()</span><br><span class="line">                    .and()</span><br><span class="line">                    .formLogin().loginPage(<span class="string">"/user/login"</span>).permitAll().and()</span><br><span class="line">                    .logout()</span><br><span class="line">                    .clearAuthentication(<span class="keyword">true</span>)</span><br><span class="line">                    .logoutSuccessUrl(<span class="string">"/user/index"</span>) <span class="comment">//退出登录后的默认网址是”/”</span></span><br><span class="line">                    .invalidateHttpSession(<span class="keyword">true</span>);;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">AppLoginSecurityConfigurationAdapter</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            http.antMatcher(<span class="string">"/app/**"</span>)</span><br><span class="line">                    .authorizeRequests().anyRequest().authenticated()</span><br><span class="line">                    .and()</span><br><span class="line">                    .formLogin().loginPage(<span class="string">"/app/login"</span>).permitAll().and()</span><br><span class="line">                    .logout()</span><br><span class="line">                    .clearAuthentication(<span class="keyword">true</span>)</span><br><span class="line">                    .logoutSuccessUrl(<span class="string">"/app/index"</span>) <span class="comment">//退出登录后的默认网址是”/”</span></span><br><span class="line">                    .invalidateHttpSession(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;对于多登陆页在网上查找了很多资料，但由于项目中的所有配置已经不使用xml方式了，因此，网上的很多方法都不试用了。&lt;/p&gt;&lt;p&gt;最后，还是在spring
      
    
    </summary>
    
      <category term="Spring" scheme="http://beeant0512.github.io/categories/Spring/"/>
    
    
      <category term="spring" scheme="http://beeant0512.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>mac iterm2 开启颜色高亮方法</title>
    <link href="http://beeant0512.github.io/2017/04/01/mac-iterm2-%E5%BC%80%E5%90%AF%E9%A2%9C%E8%89%B2%E9%AB%98%E4%BA%AE%E6%96%B9%E6%B3%95/"/>
    <id>http://beeant0512.github.io/2017/04/01/mac-iterm2-开启颜色高亮方法/</id>
    <published>2017-04-01T00:46:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h3 id="编辑-bash-profile"><a href="#编辑-bash-profile" class="headerlink" title="编辑~/.bash_profile"></a>编辑~/.bash_profile</h3><p>拷贝以下代码到~/.bash_profile中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#enables colorin the terminal bash shell export</span></span><br><span class="line"><span class="built_in">export</span> CLICOLOR=1</span><br><span class="line"><span class="comment">#sets up thecolor scheme for list export</span></span><br><span class="line"><span class="built_in">export</span> LSCOLORS=gxfxcxdxbxegedabagacad</span><br><span class="line"><span class="comment">#sets up theprompt color (currently a green similar to linux terminal)</span></span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">'\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;36m\]\w\[\033[00m\]\$ '</span></span><br><span class="line"><span class="comment">#enables colorfor iTerm</span></span><br><span class="line"><span class="built_in">export</span> TERM=xterm-color</span><br></pre></td></tr></table></figure><h3 id="配置iterm"><a href="#配置iterm" class="headerlink" title="配置iterm"></a>配置iterm</h3><p>preference-&gt;profiles-&gt;Terminal-&gt;xterm-new</p><h3 id="使-bash-profile生效"><a href="#使-bash-profile生效" class="headerlink" title="使~/.bash_profile生效"></a>使~/.bash_profile生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;编辑-bash-profile&quot;&gt;&lt;a href=&quot;#编辑-bash-profile&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="Mac" scheme="http://beeant0512.github.io/categories/Mac/"/>
    
    
      <category term="mac iterm" scheme="http://beeant0512.github.io/tags/mac-iterm/"/>
    
  </entry>
  
  <entry>
    <title>dojo-模板使用小结</title>
    <link href="http://beeant0512.github.io/2016/11/08/dojo-%E6%A8%A1%E6%9D%BF%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
    <id>http://beeant0512.github.io/2016/11/08/dojo-模板使用小结/</id>
    <published>2016-11-08T00:48:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h3 id="dojo-模板使用小结"><a href="#dojo-模板使用小结" class="headerlink" title="dojo 模板使用小结"></a>dojo 模板使用小结</h3><p>在使用dojo的模板引擎时，需要引入<code>&quot;dojox/dtl&quot;</code>,<code>&quot;dojox/dtl/Context&quot;</code>,<code>&quot;dojox/dtl/tag/logic&quot;</code></p><ul><li>dojox/dtl 还不清楚为什么非要引用</li><li>dojox/dtl/Context</li><li>dojox/dtl/tab/logic 使用模板的逻辑标签，不引用会无法解析for,之类的逻辑标签<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> template = <span class="keyword">new</span> dtl.Template(dom.byId(<span class="string">'menuTemplate'</span>).value);</span><br><span class="line"><span class="keyword">var</span> context = <span class="keyword">new</span> Context(&#123;<span class="attr">menus</span>: appMenu&#125;);</span><br><span class="line">template.render(context);</span><br></pre></td></tr></table></figure></li></ul><p>模板</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea id=<span class="string">"menuTemplate"</span> style=<span class="string">"display: none;"</span>&gt;</span><br><span class="line">&#123;% <span class="keyword">for</span> item <span class="keyword">in</span> menus %&#125;</span><br><span class="line">&lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"&#123;&#123;item.class&#125;&#125;"</span>&gt;&lt;a href="&#123;&#123;item.link&#125;&#125;"&gt;&#123;&#123;item.name&#125;&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&lt;<span class="regexp">/textarea&gt;</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;dojo-模板使用小结&quot;&gt;&lt;a href=&quot;#dojo-模板使用小结&quot; class=&quot;headerlink&quot; title=&quot;dojo 模板使
      
    
    </summary>
    
      <category term="dojo" scheme="http://beeant0512.github.io/categories/dojo/"/>
    
    
      <category term="dojo" scheme="http://beeant0512.github.io/tags/dojo/"/>
    
  </entry>
  
  <entry>
    <title>Sonar安装</title>
    <link href="http://beeant0512.github.io/2016/06/30/Sonar%E5%AE%89%E8%A3%85/"/>
    <id>http://beeant0512.github.io/2016/06/30/Sonar安装/</id>
    <published>2016-06-30T00:53:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>下载并解压SonarQube （例如： <code>C:\sonarqube\server</code> 或 <code>/etc/sonarqube/server</code>）</p><h3 id="启动SonarQube服务"><a href="#启动SonarQube服务" class="headerlink" title="启动SonarQube服务"></a>启动SonarQube服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">On Windows, execute:</span><br><span class="line">C:\sonarqube\server\bin\windows-x86-xx\StartSonar.bat</span><br><span class="line">On other operating system, execute:</span><br><span class="line">/etc/sonarqube/server/bin/[OS]/sonar.sh console</span><br></pre></td></tr></table></figure><h3 id="SonarQube-Scanner"><a href="#SonarQube-Scanner" class="headerlink" title="SonarQube Scanner"></a>SonarQube Scanner</h3><p>下载并解压SonarQube Scanner （例如： <code>C:\sonarqube\scanner</code> 或 <code>/etc/sonarqube/scanner</code>）</p><h3 id="SonarQube的工程示例"><a href="#SonarQube的工程示例" class="headerlink" title="SonarQube的工程示例"></a>SonarQube的工程示例</h3><p>下载并解压SonarQube的工程示例 （例如： <code>C:\sonarqube\example</code> 或 <code>/etc/sonarqube/example</code>)</p><h3 id="分析项目"><a href="#分析项目" class="headerlink" title="分析项目"></a>分析项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">On Windows:</span><br><span class="line">cd C:\sonarqube\example\projects\languages\java\sonar-runner\java-sonar-runner-simple</span><br><span class="line">C:\sonarqube\scanner\bin\sonar-scanner.bat</span><br><span class="line"> </span><br><span class="line">cd C:\sonarqube\example\projects\languages\javascript\javascript-sonar-runner</span><br><span class="line">C:\sonarqube\scanner\bin\sonar-scanner.bat</span><br><span class="line"> </span><br><span class="line">On other operating system:</span><br><span class="line">cd /etc/sonarqube/example/projects/languages/java/sonar-runner/java-sonar-runner-simple</span><br><span class="line">/etc/sonarqube/scanner/bin/sonar-scanner</span><br><span class="line"> </span><br><span class="line">cd /etc/sonar-examples/projects/languages/javascript/javascript-sonar-runner</span><br><span class="line">/etc/sonarqube/scanner/bin/sonar-scanner</span><br></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>打开浏览器，访问结果 <a href="http://localhost:9000" target="_blank" rel="noopener">http://localhost:9000</a> (默认的管理员帐号/密码： <code>admin/admin</code>)</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;p&gt;下载并解压Son
      
    
    </summary>
    
      <category term="Sonar" scheme="http://beeant0512.github.io/categories/Sonar/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac下双网卡设置路由区分无线和有线</title>
    <link href="http://beeant0512.github.io/2016/06/21/Mac%E4%B8%8B%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE%E8%B7%AF%E7%94%B1%E5%8C%BA%E5%88%86%E6%97%A0%E7%BA%BF%E5%92%8C%E6%9C%89%E7%BA%BF/"/>
    <id>http://beeant0512.github.io/2016/06/21/Mac下双网卡设置路由区分无线和有线/</id>
    <published>2016-06-21T00:57:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>背景：用无线访问外网，用有线访问内网。由于有些ip只能通过内网访问，因此需要手动设置路由，实现指定ip(段）走有线。</p><p>MAC route指令：</p><h3 id="查看当前路由表"><a href="#查看当前路由表" class="headerlink" title="查看当前路由表"></a>查看当前路由表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nr</span><br></pre></td></tr></table></figure><h3 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo route add -net 0.0.0.0 192.168.1.1 默认使用192.168.1.1网关</span><br><span class="line">sudo route add 10.64.20.0/24 10.17.12.254 内网地址使用内网网关</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;背景：用无线访问外网，用有线访问内网。由于有些ip只能通过内网访问，因此需要手动设置路由，实现指定ip(段）走有线。&lt;/p&gt;&lt;p&gt;MAC route指
      
    
    </summary>
    
      <category term="Mac" scheme="http://beeant0512.github.io/categories/Mac/"/>
    
    
      <category term="wifi" scheme="http://beeant0512.github.io/tags/wifi/"/>
    
  </entry>
  
  <entry>
    <title>mac osx下apache下的坑: you don’t have permission to access / on this server</title>
    <link href="http://beeant0512.github.io/2016/06/17/mac-osx%E4%B8%8Bapache%E4%B8%8B%E7%9A%84%E5%9D%91-you-don%E2%80%99t-have-permission-to-access-on-this-server/"/>
    <id>http://beeant0512.github.io/2016/06/17/mac-osx下apache下的坑-you-don’t-have-permission-to-access-on-this-server/</id>
    <published>2016-06-17T00:58:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>要在Directory指令里，增加一条 Require all granted，如下示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;/Users/jnovack/Sites/&quot;&gt;</span><br><span class="line">  Options Indexes MultiViews</span><br><span class="line">  AllowOverride All</span><br><span class="line">  # OSX 10.10 / Apache 2.4</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;要在Directory指令里，增加一条 Require all granted，如下示：&lt;/p&gt;&lt;figure class=&quot;highlight pl
      
    
    </summary>
    
      <category term="Mac" scheme="http://beeant0512.github.io/categories/Mac/"/>
    
    
      <category term="apache" scheme="http://beeant0512.github.io/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>Mac jenkins打包小计</title>
    <link href="http://beeant0512.github.io/2016/06/06/Mac-jenkins%E6%89%93%E5%8C%85%E5%B0%8F%E8%AE%A1/"/>
    <id>http://beeant0512.github.io/2016/06/06/Mac-jenkins打包小计/</id>
    <published>2016-06-06T01:19:00.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h3 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/bin/</span><br><span class="line">sudo ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><h3 id="安装p7zip"><a href="#安装p7zip" class="headerlink" title="安装p7zip"></a>安装p7zip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install p7zip</span><br></pre></td></tr></table></figure><h3 id="安装ant"><a href="#安装ant" class="headerlink" title="安装ant"></a>安装ant</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ant</span><br></pre></td></tr></table></figure><h3 id="安装ant-contrib-1-0b3"><a href="#安装ant-contrib-1-0b3" class="headerlink" title="安装ant-contrib-1.0b3"></a>安装ant-contrib-1.0b3</h3><p>拷贝ant-contrib-1.0b3到/usr/local/Cellar/ant/1.9.7/libexec目录下,其中1.9.7是ant的版本，可能有所不同</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;安装Homebrew&quot;&gt;&lt;a href=&quot;#安装Homebrew&quot; class=&quot;headerlink&quot; title=&quot;安装Homebrew
      
    
    </summary>
    
      <category term="Mac" scheme="http://beeant0512.github.io/categories/Mac/"/>
    
    
      <category term="jenkins" scheme="http://beeant0512.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>TargetLink函数解密之-自建GUI修改Block定标信息</title>
    <link href="http://beeant0512.github.io/2016/04/21/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86%E4%B9%8B-%E8%87%AA%E5%BB%BAGUI%E4%BF%AE%E6%94%B9Block%E5%AE%9A%E6%A0%87%E4%BF%A1%E6%81%AF/"/>
    <id>http://beeant0512.github.io/2016/04/21/TargetLink函数解密之-自建GUI修改Block定标信息/</id>
    <published>2016-04-21T15:21:17.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>之前介绍过get_tlcg_data, set_tlcg_data, dsdd之SelectObject，今日就使用一个简单的例子来，结合这三个函数来实现修改block的变量标定。</p><h3 id="1-建立GUI"><a href="#1-建立GUI" class="headerlink" title="1.建立GUI"></a>1.建立GUI</h3><p>在建立GUI之前，如果还不会怎么建立GUI的话，执行脑补一下。</p><h4 id="新建GUI"><a href="#新建GUI" class="headerlink" title="新建GUI"></a>新建GUI</h4><img src="/images/targetlink/gui-variable/new-gui.png" alt="建立GUI"><h4 id="添加按钮"><a href="#添加按钮" class="headerlink" title="添加按钮"></a>添加按钮</h4><img src="/images/targetlink/gui-variable/gui-variable-btn.png" alt="添加按钮"><h3 id="2-设置回调函数"><a href="#2-设置回调函数" class="headerlink" title="2.设置回调函数"></a>2.设置回调函数</h3><p>设置Variable的回调函数 callback</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">% --- Executes on button press in tl_variable.</span><br><span class="line">function tl_variable_Callback(hObject, eventdata, handles)</span><br><span class="line">% hObject    handle to tl_variable (see GCBO)</span><br><span class="line">% eventdata  reserved - to be defined in a future version of MATLAB</span><br><span class="line">% handles    structure with handles and user data (see GUIDATA)</span><br><span class="line">tlcg_data = get_tlcg_data(gcbh);</span><br><span class="line">output = tlcg_data.output;</span><br><span class="line">[currentPath,bModified] = dsdd(&apos;SelectObject&apos;,&apos;CurrentPath&apos;,output.variable ,&apos;objectKind&apos;,&apos;Variable&apos;);</span><br><span class="line">if bModified == 1</span><br><span class="line">    output.variable = currentPath;</span><br><span class="line">    tlcg_data.output = output;</span><br><span class="line">    set_tlcg_data(gcbh, tlcg_data);</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h3 id="3-结果演示"><a href="#3-结果演示" class="headerlink" title="3.结果演示"></a>3.结果演示</h3><h4 id="选中一个Block-此处选中了Gain模块"><a href="#选中一个Block-此处选中了Gain模块" class="headerlink" title="选中一个Block,此处选中了Gain模块"></a>选中一个Block,此处选中了Gain模块</h4><img src="/images/targetlink/gui-variable/gain.png" alt="设置前"> <img src="/images/targetlink/gui-variable/before-set.png" alt="设置前"><h4 id="点击Variable按钮"><a href="#点击Variable按钮" class="headerlink" title="点击Variable按钮"></a>点击Variable按钮</h4><img src="/images/targetlink/gui-variable/mygui.png" alt="设置前"> #### 选中变量 #### <img src="/images/targetlink/gui-variable/select-variable.png" alt="设置前"><h4 id="确定查看效果"><a href="#确定查看效果" class="headerlink" title="确定查看效果"></a>确定查看效果</h4><img src="/images/targetlink/gui-variable/after-set.png" alt="设置后效果"><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;之前介绍过get_tlcg_data, set_tlcg_data, dsdd之SelectObject，今日就使用一个简单的例子来，结合这三个函数来
      
    
    </summary>
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/categories/Targetlink/"/>
    
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/tags/Targetlink/"/>
    
  </entry>
  
  <entry>
    <title>TargetLink函数解密之dsdd-SelectObject</title>
    <link href="http://beeant0512.github.io/2016/03/26/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86%E4%B9%8Bdsdd-SelectObject/"/>
    <id>http://beeant0512.github.io/2016/03/26/TargetLink函数解密之dsdd-SelectObject/</id>
    <published>2016-03-26T03:31:42.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>在targetLink的众多API中，个人觉得dsdd SelectObject是极其强大的一个，因为dsdd是链接dd文件和block之间的桥梁（暂且这样来形容）。通过dsdd SelectObject能够获取到dd中的各种属性，结合<a href="http://beeant0512.github.io/2016/03/15/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86-%E4%B9%8B-get-tlcg-data/">get_tlcg_data</a>,<a href="http://beeant0512.github.io/2016/03/17/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86-%E4%B9%8B-set-tlcg-data/">set_tlcg_data</a>从而实现修改block的各种属性（Variable,Class,Type,Scaling…)。</p><h4 id="函数简介"><a href="#函数简介" class="headerlink" title="函数简介"></a>函数简介</h4><p>对于SelectObject，官方是这样解释的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Opens a modal dialog with which a DD object can be selected. </span><br><span class="line">Which object are selectable is specified with keywords. </span><br><span class="line">This command is for internal use only, and its interface may be subject to future modifications.</span><br></pre></td></tr></table></figure><p>试译：通过关键字打开一个能够选择特定DD属性的模态框</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[currentPath,bModified] = dsdd(&apos;SelectObject&apos;[,&apos;currentPath&apos;,&lt;currentPath&gt;],&apos;entryPath&apos;,&lt;entryPath&gt;,&lt;keyword1&gt;,&lt;keyword2&gt;, ... ,&lt;keywordn&gt;);</span><br><span class="line">[currentPath,bModified] = dsdd(&apos;SelectObject&apos;[,&apos;currentPath&apos;,&lt;currentPath&gt;],&apos;objectKind&apos;,&lt;objectKind&gt;,&lt;keyword1&gt;,&lt;keyword2&gt;, ... ,&lt;keywordn&gt;);</span><br></pre></td></tr></table></figure><h4 id="输入参数说明"><a href="#输入参数说明" class="headerlink" title="输入参数说明"></a>输入参数说明</h4><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">currentPath</td><td align="left">string</td><td align="left">current value for reference property</td></tr><tr><td align="left">objectKind</td><td align="left">object kind</td><td align="left">string or cell array of strings specifies object kind(s)</td></tr><tr><td align="left">entryPath</td><td align="left">DD path</td><td align="left">relative DD root where objects reside</td></tr></tbody></table><h4 id="输出参数说明"><a href="#输出参数说明" class="headerlink" title="输出参数说明"></a>输出参数说明</h4><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">currentPath</td><td align="left">string</td><td align="left">object which has been selected (empty string if no object hase been selected)</td></tr><tr><td align="left">bModified</td><td align="left">boolean</td><td align="left">1 if user has selected an object, 0 if not</td></tr><tr><td align="left">#### 举例</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">打开数据类型模态框，设置仅显示整型，且默认值Int8为选中</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; selectedType = dsdd(&apos;SelectObject&apos;,&apos;CurrentPath&apos;,&apos;Int8&apos;,&apos;objectKind&apos;,&apos;Typedef&apos;,&apos;OnlyInteger&apos;)</span><br><span class="line"></span><br><span class="line">selectedType =</span><br><span class="line"></span><br><span class="line">UInt16</span><br></pre></td></tr></table></figure></td><td align="left"></td><td align="left"></td></tr></tbody></table><p><img src="/images/targetlink/selectObject/01.png" alt="打开"> <img src="/images/targetlink/selectObject/02.png" alt="选中"></p><h4 id="ObjectKind列表"><a href="#ObjectKind列表" class="headerlink" title="ObjectKind列表"></a>ObjectKind列表</h4><table><thead><tr><th align="left">objectKind</th><th align="left">试译</th></tr></thead><tbody><tr><td align="left">AccessFunction</td><td align="left">Describes a function that provides access to a variable in the production code.</td></tr><tr><td align="left">AccessFunctionTemplate</td><td align="left">Template for access functions.</td></tr><tr><td align="left">Acknowledgement</td><td align="left">Describes the acknowledge behavior of a sender-receiver data element.</td></tr><tr><td align="left">Action</td><td align="left">Specifies an action that should be started when a message is received or an alarm expires.</td></tr><tr><td align="left">Alarm</td><td align="left">Describes an OSEK OS alarm.</td></tr><tr><td align="left">Annotation</td><td align="left">Enables to add annotations to the object that owns an instance of this object.</td></tr><tr><td align="left">ApplicationDataTypeComponent</td><td align="left">Defines one structure component of a data type on the application level.</td></tr><tr><td align="left">ApplicationDataTypeGroup</td><td align="left">Used to group ApplicationDataType objects.</td></tr><tr><td align="left">ApplicationDataType</td><td align="left">Defines a data type on the application level.</td></tr><tr><td align="left">ApplicationError</td><td align="left">Describes a user-defined error that is associated with an element of an interface.</td></tr><tr><td align="left">ApplicationMode</td><td align="left">Defines properties of a OSEK application mode.</td></tr><tr><td align="left">Application</td><td align="left">Describes an application built from code generated for one or more Simulink systems.</td></tr><tr><td align="left">AsynchronousServerCallPoint</td><td align="left">Describes an AUTOSAR asynchronous server call point.</td></tr><tr><td align="left">AsynchronousServerCallResultPoint</td><td align="left">Describes an AUTOSAR asynchronous server call result point.</td></tr><tr><td align="left">AutosarAccessPoint</td><td align="left">Describes an AUTOSAR access point.</td></tr><tr><td align="left">Autosar</td><td align="left">This object keeps AUTOSAR-related objects.</td></tr><tr><td align="left">BaseTypes</td><td align="left">Specifies base datatypes that are used. Each child object describes one particular base data type.</td></tr><tr><td align="left">BlockGroup</td><td align="left">Used to group Block objects. BlockGroup objects correspond with subsystem blocks in Simulink models, or with Simulink models.</td></tr><tr><td align="left">Block</td><td align="left">Describes a Simulink block. In the Subsystems area, Block objects describe blocks in the Simulink system that has been processed by the Code Generator. In the Pool area, Block objects can be used for DD based code generation.</td></tr><tr><td align="left">BlockVariable</td><td align="left">Describes a Simulink block variable.</td></tr><tr><td align="left">Build</td><td align="left">Describes an executable that was built to run the production code application.</td></tr><tr><td align="left">CalPrmAccessPoint</td><td align="left">Describes an AUTOSAR access point for a calibratable parameter.</td></tr><tr><td align="left">CalPrmComSpec</td><td align="left">Defines how a calprm element is accessed by the receiver.</td></tr><tr><td align="left">CalPrmElement</td><td align="left">Describes a calibration parameter in a CalPrmInterface. Calibration parameters are typically declared as constants (read-only) in the source code. Nevertheless, such parameters may be modified by a calibration system.</td></tr><tr><td align="left">CalPrmInterface</td><td align="left">Defines an interface which contains calibratable parameters. The interface is provided by a CalPrm component and consumed by one or more application components.</td></tr><tr><td align="left">CalibrationMethod</td><td align="left">Defines a calibration method that can be used to access the target hardware, for example, InCircuit, SERAM, DSERAP, BSERAP.</td></tr><tr><td align="left">CatalogEntry</td><td align="left">Object representing a file reference with additional information.</td></tr><tr><td align="left">CatalogGroup</td><td align="left">Used to group calatog objects.</td></tr><tr><td align="left">Catalog</td><td align="left">Contains file references and file category information of files such as source code files (.h/.c) or AUTOSAR files (.arxml/.epc).</td></tr><tr><td align="left">ClientComSpec</td><td align="left">Describes communication attributes for an operation call (client side).</td></tr><tr><td align="left">ClientPort</td><td align="left">Describes an AUTOSAR require client-server port.</td></tr><tr><td align="left">ClientServerInterface</td><td align="left">Defines an interface which contains operations that a client may invoke on a server.</td></tr><tr><td align="left">CodeGenerationUnitGroup</td><td align="left">Used to group CodeGenerationUnit objects.</td></tr><tr><td align="left">CodeGenerationUnit</td><td align="left">Used to specify code generation form DDs.</td></tr><tr><td align="left">Config</td><td align="left">The Config object contains general configuration data. Each DD has one Config object which is a child of the DD’s root.</td></tr><tr><td align="left">Container</td><td align="left">Contains additional data attached to a DD object.</td></tr><tr><td align="left">Counter</td><td align="left">Describes a counter that is used by the operating system.</td></tr><tr><td align="left">CoverageData</td><td align="left">Contains data for code coverage analysis.</td></tr><tr><td align="left">CustomCodeFile</td><td align="left">Describes the content of a custom code file as used by TargetLink Custom Code blocks.</td></tr><tr><td align="left">CustomCodeSection</td><td align="left">Describes one custom code section.</td></tr><tr><td align="left">DDIncludeFile</td><td align="left">Specifies a DD file which is automatically loaded (saved) when a DD project is opened (closed). DDIncludeFile objects are thus used to specify points of inclusion.</td></tr><tr><td align="left">DDUseCase</td><td align="left">Defines a use case for the Data Dictionary Manager.</td></tr><tr><td align="left">DDUseCaseView</td><td align="left">Specifies a view for a given object kind in a DD use case, i.e. which child objects are visible.</td></tr><tr><td align="left">DataDict</td><td align="left">Root element of a Data Dictionary workspace. There is only one DataDict object in each DD.</td></tr><tr><td align="left">DataElement</td><td align="left">Describes a data element, for example, a member of a sender/receiver interface.</td></tr><tr><td align="left">DataFilter</td><td align="left">Defines a filter which can be applied to a received data elements, for example, to exclude values which are out of range.</td></tr><tr><td align="left">DataReadAccess</td><td align="left">Describes an AUTOSAR data read access.</td></tr><tr><td align="left">DataReceivePoint</td><td align="left">Describes an AUTOSAR data receive point.</td></tr><tr><td align="left">DataReceiverComSpec</td><td align="left">Defines how a data element is accessed by the receiver.</td></tr><tr><td align="left">DataSendPoint</td><td align="left">Describes an AUTOSAR data send point.</td></tr><tr><td align="left">DataSenderComSpec</td><td align="left">Defines how a data element is accessed by the sender .</td></tr><tr><td align="left">DataTypeMap</td><td align="left">Specifies a mapping between an ApplicationDataType object and a Typedef object.</td></tr><tr><td align="left">DataTypeMappingSetGroup</td><td align="left">Used to group DataTypeMappingSet objects.</td></tr><tr><td align="left">DataTypeMappingSet</td><td align="left">Represents a list of mappings between ApplicationDataType and Typedef objects, as well as a list of mappings between ModeDeclarationGroup and Typedef objects.</td></tr><tr><td align="left">DataVariantItem</td><td align="left">Specifies one data variant item. The DataVariant’s DataVariantItem child objects with their variant IDs constitute one data variant.</td></tr><tr><td align="left">DataVariant</td><td align="left">Defines a data variant. Data variants can be switched at runtime.</td></tr><tr><td align="left">DataWriteAccess</td><td align="left">Describes an AUTOSAR data write access.</td></tr><tr><td align="left">DeviceGroup</td><td align="left">Used to group Device objects.</td></tr><tr><td align="left">Device</td><td align="left">Describes a device in the model.</td></tr><tr><td align="left">DynamicComponent</td><td align="left">Defines a component of a struct or union.</td></tr><tr><td align="left">EMLFunctionGroup</td><td align="left">Used to group EMLFunction objects.</td></tr><tr><td align="left">EMLFunction</td><td align="left">Defines properties of an EML function.</td></tr><tr><td align="left">Event</td><td align="left">Describes an operating system event.</td></tr><tr><td align="left">EventReceiverComSpec</td><td align="left">Defines how an event data element is accessed by the receiver.</td></tr><tr><td align="left">EventSenderComSpec</td><td align="left">Defines how an event data element is sent .</td></tr><tr><td align="left">ExchangeableWidth</td><td align="left">Defines a set of variable widths used for width invariant code generation.</td></tr><tr><td align="left">ExclusiveArea</td><td align="left">Defines an exclusive area, that means a part of the code which is protected against interrupts. The actual type of protection mechanism is selected when performing the mapping onto the RTOS. .</td></tr><tr><td align="left">Experiment</td><td align="left">Specifies experiment configurations.</td></tr><tr><td align="left">FileInfo</td><td align="left">Specifies how a file should be generated.</td></tr><tr><td align="left">FileSpecification</td><td align="left">Describes attributes of files which are needed to build an application, for example, generated code files, legacy code files, etc. .</td></tr><tr><td align="left">FunctionClassGroup</td><td align="left">Used to group FunctionClass objects.</td></tr><tr><td align="left">FunctionClass</td><td align="left">Defines C attributes of a function in production code.</td></tr><tr><td align="left">FunctionClassTemplate</td><td align="left">FunctionClassTemplate objects specify which FunctionClass object should be used when no FunctionClass object is specified. Filter rules define when the FunctionClasstemplate object applies.</td></tr><tr><td align="left">FunctionGroup</td><td align="left">Used to group Function objects.</td></tr><tr><td align="left">FunctionInstance</td><td align="left">Describes one instance of a function.</td></tr><tr><td align="left">Function</td><td align="left">In the Pool area, Function objects describe how functions in the production code should be generated. In the Subsystems area, Function objects describe functions that were generated by the Code Generator.</td></tr><tr><td align="left">FunctionTemplate</td><td align="left">FunctionTemplate objects describe rules how functions that match a specified filter conditions should be generated.</td></tr><tr><td align="left">Generic</td><td align="left">Generic objects are used to specify arbitrary data that are not defined by the Data Model.</td></tr><tr><td align="left">IFDataBlob</td><td align="left">Specifies ASAP2 specific blob data information.</td></tr><tr><td align="left">IFData</td><td align="left">Specifies ASAP1b specific IF_DATA information (A2L_BLOB). The name contains the value of the name1 struct element which is usually ‘IF_DATA’.</td></tr><tr><td align="left">IFDataSourceBlob</td><td align="left">Describes an ASAM-MCD 2MC source blob.</td></tr><tr><td align="left">IFDataTokenList</td><td align="left">Contains an ASAM MCD 2MC (ASAP2) specific list of tokens (from A2L_TOKEN_LIST).</td></tr><tr><td align="left">ISR</td><td align="left">Describes an interrupt service routine.</td></tr><tr><td align="left">IncludedCodeFile</td><td align="left">Specifies header files which are included to a module.</td></tr><tr><td align="left">InterRunnableVariableReadAccess</td><td align="left">Describes an AUTOSAR inter runnable data read access.</td></tr><tr><td align="left">InterRunnableVariableWriteAccess</td><td align="left">Describes an AUTOSAR inter runnable data write access.</td></tr><tr><td align="left">InterfaceGroup</td><td align="left">Used to group Interface objects.</td></tr><tr><td align="left">InterfaceVariable</td><td align="left">Describes a variable which belongs to a function interface. The variable can be a global input or output, a formal or actual argument, or the function’s return value.</td></tr><tr><td align="left">LogVariableGroup</td><td align="left">Used to group LogVariable objects.</td></tr><tr><td align="left">LogVariable</td><td align="left">Describes a variable to be logged during simulations.</td></tr><tr><td align="left">LookupFunctionTemplate</td><td align="left">LookupFunctionTemplate objects describe rules how look-up functions that match a specified filter conditions should be generated.</td></tr><tr><td align="left">MemorySegment</td><td align="left">Defines properties of an address range in target memory.</td></tr><tr><td align="left">MessageAccessor</td><td align="left">Specifies how a message variable is accessed by the sender or the receiver.</td></tr><tr><td align="left">Message</td><td align="left">Describes a communication connection. In the Pool area, Message objects specify how communication connections should be generated. In the Subsystems area, Message object describe how communication connections have been implemented by the Code Generator.</td></tr><tr><td align="left">MessageVariable</td><td align="left">Defines a variable used to hold message data.</td></tr><tr><td align="left">ModeAccessPoint</td><td align="left">Describes an AUTOSAR mode access point.</td></tr><tr><td align="left">ModeDeclarationGroupGroup</td><td align="left">Used to group ModeDeclarationGroup objects.</td></tr><tr><td align="left">ModeDeclarationGroup</td><td align="left">Defines a group of modes, which exist for a given application mode of the ECU, for example, INIT, RUN, TERMINATE, …</td></tr><tr><td align="left">ModeDeclaration</td><td align="left">Defines an available ECU mode, for example, INIT.</td></tr><tr><td align="left">ModeDisablingDependency</td><td align="left">Specifies a mode that disables the RTE event this object belongs to.</td></tr><tr><td align="left">ModeElement</td><td align="left">Describes an element of a sender/receiver interface which is used to communicate ECU modes (Init, .., Term) to a software component. In AUTOSAR, mode elements are called ‘ModeDeclarationGroupPrototypes’.</td></tr><tr><td align="left">ModeReceiverComSpec</td><td align="left">Describes attributes for receiver communication.</td></tr><tr><td align="left">ModeReceiverPort</td><td align="left">Describes an AUTOSAR mode receiver port.</td></tr><tr><td align="left">ModeRequestTypeMap</td><td align="left">Specifies a mapping between a ModeDeclarationGroup object and a Typedef object.</td></tr><tr><td align="left">ModeSenderComSpec</td><td align="left">Describes attributes for sender communication.</td></tr><tr><td align="left">ModeSenderPort</td><td align="left">Describes an AUTOSAR mode sender port.</td></tr><tr><td align="left">ModeSwitchInterface</td><td align="left">Describes an AUTOSAR mode switch interface.</td></tr><tr><td align="left">ModeSwitchPoint</td><td align="left">Describes an AUTOSAR mode switch point.</td></tr><tr><td align="left">ModelGroup</td><td align="left">Used to group Model objects.</td></tr><tr><td align="left">Model</td><td align="left">Describes a Simulink model.</td></tr><tr><td align="left">ModuleGroup</td><td align="left">Used to group Module objects.</td></tr><tr><td align="left">Module</td><td align="left">Secifies a module in production code.</td></tr><tr><td align="left">ModuleOwnerShipGroup</td><td align="left">Used to group ModuleOwnerShip objects.</td></tr><tr><td align="left">ModuleOwnerShip</td><td align="left">Specifies module ownership.</td></tr><tr><td align="left">ModuleTemplate</td><td align="left">Template for code modules.</td></tr><tr><td align="left">OILEntry</td><td align="left">Describes one entry in a OIL file.</td></tr><tr><td align="left">OILFile</td><td align="left">Contains the memory image of a complete OIL file.</td></tr><tr><td align="left">OperationArgument</td><td align="left">Describes an argument of a operation. Operations are elements of client/server interfaces, that means functions which a client component may invoke on a server component.</td></tr><tr><td align="left">Operation</td><td align="left">Describes an operation. Operations are elements of client/server interfaces, that means functions which a client component may invoke on a server component.</td></tr><tr><td align="left">PageSwitchingInfo</td><td align="left">Describes a code page which can be switched.</td></tr><tr><td align="left">PerInstanceMemoryVariableAccess</td><td align="left">Describes an AUTOSAR per instance memory variable access.</td></tr><tr><td align="left">Pool</td><td align="left">The Pool object is a child of the DD root and constitutes the Pool area in which data for code generation are specified.</td></tr><tr><td align="left">PortGroup</td><td align="left">Used to group AUTOSAR port objects.</td></tr><tr><td align="left">Port</td><td align="left">Describes a port of a Simulink system.</td></tr><tr><td align="left">PropertyValueList</td><td align="left">List of propertyname/value pairs. All property values are strings. Additional PropertyValueList objects can be inserted to create a hierarchical composition.</td></tr><tr><td align="left">ProtectionMechanism</td><td align="left">Defines a mechanism used to protect code sections against preemption by tasks or ISRs.</td></tr><tr><td align="left">ProvideCalPrmPort</td><td align="left">Describes an AUTOSAR SWC port where a CalPrmInterface is provided.</td></tr><tr><td align="left">RTOS</td><td align="left">Contains RTOS objects needed for multirate code generation.</td></tr><tr><td align="left">Raster</td><td align="left">Defines a measurement raster which can be used for data acquisition by a calibration system.</td></tr><tr><td align="left">ReceiverPort</td><td align="left">Describes an AUTOSAR require sender-receiver port.</td></tr><tr><td align="left">RecordLayout</td><td align="left">Specifies how a table map for a look-up function should be generated.</td></tr><tr><td align="left">RequireCalPrmPort</td><td align="left">Describes an AUTOSAR SWC port where a CalPrmInterface is required.</td></tr><tr><td align="left">RequirementInfo</td><td align="left">RequirementInfo objects keep Simulink RMI data.</td></tr><tr><td align="left">Resource</td><td align="left">Describes an OSEK OS resource.</td></tr><tr><td align="left">RootFunctionTemplate</td><td align="left">Template for root functions (STEP, INIT, RESTART, TERM, …).</td></tr><tr><td align="left">RteEvent</td><td align="left">Describes an RTE event.</td></tr><tr><td align="left">Runnable</td><td align="left">Describes an AUTOSAR runnable.</td></tr><tr><td align="left">ScalingGroup</td><td align="left">Used to group Scaling objects.</td></tr><tr><td align="left">Scaling</td><td align="left">Specifies scaling parameters.</td></tr><tr><td align="left">Section</td><td align="left">Describes a linker section.</td></tr><tr><td align="left">SenderPort</td><td align="left">Describes an AUTOSAR provide sender-receiver port.</td></tr><tr><td align="left">SenderReceiverInterface</td><td align="left">Defines an interface for sending and receiving data via ports.</td></tr><tr><td align="left">ServerComSpec</td><td align="left">Describes communication attributes for an operation call (server side).</td></tr><tr><td align="left">ServerPort</td><td align="left">Describes an AUTOSAR provide client-server port.</td></tr><tr><td align="left">SharedCalPrmVariableAccess</td><td align="left">Describes an AUTOSAR inter runnable shared calibratable access.</td></tr><tr><td align="left">SoftwareComponentGroup</td><td align="left">Used to group SoftwareComponent objects.</td></tr><tr><td align="left">SoftwareComponent</td><td align="left">Describes an AUTOSAR software component including it’s internal behavior.</td></tr><tr><td align="left">StateflowNode</td><td align="left">Describes a state or subchart in a Statechart.</td></tr><tr><td align="left">StructTemplate</td><td align="left">Template for structs.</td></tr><tr><td align="left">SubStructTemplate</td><td align="left">Template for substructs.</td></tr><tr><td align="left">Subfunction</td><td align="left">Describes a subfunction called from a function instance.</td></tr><tr><td align="left">SubsystemConfig</td><td align="left">Contains configuration data for a subsystem. This information is evaluated by the Code Generator.</td></tr><tr><td align="left">Subsystem</td><td align="left">Object containing the description of a generated or imported subsystem.</td></tr><tr><td align="left">SwRecordLayoutContent</td><td align="left">This element is used together with SwRecordLayoutElements. It describes the serialization of the data (e.g. a look-up table axis) in the ECU memory.</td></tr><tr><td align="left">SwRecordLayoutElement</td><td align="left">Defines an element (group) in a record layout that describes the serialization of the data (e.g. a look-up table axis) in the ECU memory.</td></tr><tr><td align="left">SwRecordLayoutGroup</td><td align="left">Used to group SwRecordLayout objects.</td></tr><tr><td align="left">SwRecordLayout</td><td align="left">Used to describe the various record layouts of the calibratable object (especially look-up table data) in the memory of the ECU.</td></tr><tr><td align="left">SymbolGroup</td><td align="left">Used to group Symbol objects.</td></tr><tr><td align="left">Symbol</td><td align="left">Defines object kind symbol.</td></tr><tr><td align="left">SynchronousServerCallPoint</td><td align="left">Describes an AUTOSAR synchronous server call point.</td></tr><tr><td align="left">Task</td><td align="left">Describes a operating system task.</td></tr><tr><td align="left">TaskTemplate</td><td align="left">Defines properties of a task which are not explicitly defined in the model.</td></tr><tr><td align="left">TemplateGroup</td><td align="left">Used to group template objects.</td></tr><tr><td align="left">TypedefComponent</td><td align="left">Defines a component of a struct or union data type.</td></tr><tr><td align="left">TypedefEnumValue</td><td align="left">Defines an element of an enum union data type.</td></tr><tr><td align="left">TypedefGroup</td><td align="left">Used to group Typedef objects.</td></tr><tr><td align="left">Typedef</td><td align="left">Specifies a data type. In the Pool area, Typedef objects serve as templates that describe how a data type should be generated. In the Subsystems area, Typedef objects describe how a data type was generated in the production code.</td></tr><tr><td align="left">TypedefTemplate</td><td align="left">Specifies attributes of struct, enum, or union data types that are generated implicitly.</td></tr><tr><td align="left">Unit</td><td align="left">Defines a physical unit based on SI units.</td></tr><tr><td align="left">VariableClassGroup</td><td align="left">Used to group VariableClass objects.</td></tr><tr><td align="left">VariableClass</td><td align="left">Defines C attributes of variables in the production code.</td></tr><tr><td align="left">VariableClassTemplate</td><td align="left">VariableClassTemplate objects specify which VariableClass object should be used when no VariableClass object is specified. Filter rules define when the VariableClasstemplate object applies.</td></tr><tr><td align="left">VariableGroup</td><td align="left">Used to group Variable objects.</td></tr><tr><td align="left">Variable</td><td align="left">Variable objects describe variables in production code. In the Pool area, Variable objects serve as templates that specify how a variable should be generated. By associating a TargetLink block variable (for example, a block’s output) with a Variable object in the Pool area, the properties of the Variable object determine how the block variable should be represented in production code. In the Subsystems area, Variable objects describe how an instance of a variable was generated in production code.</td></tr><tr><td align="left">VariableTemplate</td><td align="left">VariableTemplate objects specify how implicit variables should be generated in the production code.</td></tr><tr><td align="left">VariantConfig</td><td align="left">Defines a variant configuration. This variant configuration is activated by setting the /Config/ TargetLink.ActiveVariantConfig property to the name of this object.</td></tr><tr><td align="left">VariantItem</td><td align="left">Defines a variant. VariantItem objects enable to associate varianted properties with variant configurations described by VariantConfig objects.</td></tr><tr><td align="left">WaitPoint</td><td align="left">Describes an AUTOSAR wait point.</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;在targetLink的众多API中，个人觉得dsdd SelectObject是极其强大的一个，因为dsdd是链接dd文件和block之间的桥梁（暂
      
    
    </summary>
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/categories/Targetlink/"/>
    
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/tags/Targetlink/"/>
    
  </entry>
  
  <entry>
    <title>TargetLink函数解密之dsdd-函数列表</title>
    <link href="http://beeant0512.github.io/2016/03/26/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86%E4%B9%8Bdsdd-%E5%87%BD%E6%95%B0%E5%88%97%E8%A1%A8/"/>
    <id>http://beeant0512.github.io/2016/03/26/TargetLink函数解密之dsdd-函数列表/</id>
    <published>2016-03-26T02:58:41.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><table><thead><tr><th align="left">函数</th><th align="left">试译</th></tr></thead><tbody><tr><td align="left">‘AddMessage’</td><td align="left">add message to DD message list</td></tr><tr><td align="left">‘AutoLoad’</td><td align="left">loads DD file for inspection</td></tr><tr><td align="left">‘CheckPointsOfInclusion’</td><td align="left">checks points of inclusion and updates POI table</td></tr><tr><td align="left">‘CheckRefs’</td><td align="left">check reference properties</td></tr><tr><td align="left">‘Clear’</td><td align="left">delete all objects in specified DD</td></tr><tr><td align="left">‘ClearAll’</td><td align="left">clear all DD trees</td></tr><tr><td align="left">‘ClearMessageList’</td><td align="left">clear messages in DD</td></tr><tr><td align="left">‘Close’</td><td align="left">close a project</td></tr><tr><td align="left">‘Copy’</td><td align="left">copy an object</td></tr><tr><td align="left">‘CopyToWorkspace’</td><td align="left">copy object into DD tree (workspace</td></tr><tr><td align="left">‘CopyTree’</td><td align="left">copy an object and its children</td></tr><tr><td align="left">‘Create’</td><td align="left">create an object</td></tr><tr><td align="left">‘CreateDD’</td><td align="left">create a new DD tree</td></tr><tr><td align="left">‘Delete’</td><td align="left">delete an object, property, or property variant</td></tr><tr><td align="left">‘DeleteDD’</td><td align="left">delete a DD tree</td></tr><tr><td align="left">‘DeleteMessage’</td><td align="left">delete n-th DD message</td></tr><tr><td align="left">‘Edit’</td><td align="left">open type specific object dialog</td></tr><tr><td align="left">‘Exist’</td><td align="left">check if object identifier is valid</td></tr><tr><td align="left">‘Export’</td><td align="left">invoke export module</td></tr><tr><td align="left">‘Find’</td><td align="left">search object</td></tr><tr><td align="left">‘FindNext’</td><td align="left">looks for next object in tree hierarchy</td></tr><tr><td align="left">‘FindRefs’</td><td align="left">find objects with reference property that point to a specified object</td></tr><tr><td align="left">‘Get’</td><td align="left">get a property</td></tr><tr><td align="left">‘GetActiveVariant’</td><td align="left">get the active variant configuration</td></tr><tr><td align="left">‘GetAll’</td><td align="left">get all properties in a struct</td></tr><tr><td align="left">‘GetAllDDs’</td><td align="left">get information about all DD trees</td></tr><tr><td align="left">‘GetAttribute’</td><td align="left">get attribute of an object</td></tr><tr><td align="left">‘GetAttributes’</td><td align="left">get attributes of an object</td></tr><tr><td align="left">‘GetAutoRenamePropertyIndices’</td><td align="left">get name indices of autorenamed property</td></tr><tr><td align="left">‘GetChildInfo’</td><td align="left">get struct with info about common child object/property list</td></tr><tr><td align="left">‘GetChildren’</td><td align="left">get vector with handles of children</td></tr><tr><td align="left">‘GetChildrenNames’</td><td align="left">get cell array of strings with children names</td></tr><tr><td align="left">‘GetCodeVariants’</td><td align="left">get current code variants</td></tr><tr><td align="left">‘GetContextObject’</td><td align="left">get context object for ref property</td></tr><tr><td align="left">‘GetCurrentDataModelRevNr’</td><td align="left">get the Data Model revision number of the specified DD</td></tr><tr><td align="left">‘GetCurrentVariantConfig’</td><td align="left">get current VariantConfig object</td></tr><tr><td align="left">‘GetDataModelRevNr’</td><td align="left">get the revision number of the current Data Model</td></tr><tr><td align="left">‘GetDataVariants’</td><td align="left">get current data variants</td></tr><tr><td align="left">‘GetDDAttribute’</td><td align="left">get attribute of specified DD tree</td></tr><tr><td align="left">‘GetDDAttributes’</td><td align="left">get information about a DD tree</td></tr><tr><td align="left">‘GetDefaultPath’</td><td align="left">returns default path for objects of specified object kind</td></tr><tr><td align="left">‘GetEnv’</td><td align="left">get environment variable</td></tr><tr><td align="left">‘GetLastMessage’</td><td align="left">get the last DD message</td></tr><tr><td align="left">‘GetListOfVariants’</td><td align="left">get list of variants of a property</td></tr><tr><td align="left">‘GetMaxNumMessages’</td><td align="left">get the max. number of messages</td></tr><tr><td align="left">‘GetMessage’</td><td align="left">get n-th DD message</td></tr><tr><td align="left">‘GetMessageList’</td><td align="left">get all messages from DD</td></tr><tr><td align="left">‘GetModified’</td><td align="left">check if any object is modified in specified tree</td></tr><tr><td align="left">‘GetNumMessages’</td><td align="left">get number of messages</td></tr><tr><td align="left">‘GetPointsOfInclusion’</td><td align="left">get points of inclusion</td></tr><tr><td align="left">‘GetPropertyNames’</td><td align="left">get cell array of strings with property names</td></tr><tr><td align="left">‘GetPropertyType’</td><td align="left">get type of property</td></tr><tr><td align="left">‘GetRawMode’</td><td align="left">check if raw mode is set</td></tr><tr><td align="left">‘GetUser’</td><td align="left">get DD user mode</td></tr><tr><td align="left">‘HasCurrentDataModelRevNr’</td><td align="left">checks if specified DD’s Data Model revision number corresponds with current Data Model revision number</td></tr><tr><td align="left">‘HasObjectDialog’</td><td align="left">checks if object dialog is available for specified object</td></tr><tr><td align="left">‘Help’</td><td align="left">show this screen</td></tr><tr><td align="left">‘Import’</td><td align="left">invoke import module</td></tr><tr><td align="left">‘IsCompatible’</td><td align="left">check if referred object is compatible</td></tr><tr><td align="left">‘IsDDFile’</td><td align="left">checks if a specified file is a valid DD file</td></tr><tr><td align="left">‘IsModified’</td><td align="left">check if DD has been modified</td></tr><tr><td align="left">‘IsPointOfInclusion’</td><td align="left">check if object is a point of inclusion</td></tr><tr><td align="left">‘Load’</td><td align="left">load DD file into object</td></tr><tr><td align="left">‘MakePointOfInclusion’</td><td align="left">make an object a point of inclusion</td></tr><tr><td align="left">‘Merge’</td><td align="left">merge an object into another</td></tr><tr><td align="left">‘Move’</td><td align="left">moves object to another parent</td></tr><tr><td align="left">‘Open’</td><td align="left">open a project</td></tr><tr><td align="left">‘OpenHelp’</td><td align="left">open on-line help for specified object, or property</td></tr><tr><td align="left">‘ResetToDefault’</td><td align="left">reset object to default value according to the Data Model</td></tr><tr><td align="left">‘Save’</td><td align="left">save object to file</td></tr><tr><td align="left">‘SelectDDTemplate’</td><td align="left">select DD template file</td></tr><tr><td align="left">‘SelectObject’</td><td align="left">select value for reference property</td></tr><tr><td align="left">‘Set’</td><td align="left">set property of an object</td></tr><tr><td align="left">‘SetAccessRights’</td><td align="left">set access attributes of object and/or children</td></tr><tr><td align="left">‘SetActiveVariant’</td><td align="left">set the active variant configuration</td></tr><tr><td align="left">‘SetAll’</td><td align="left">set properties with a struct</td></tr><tr><td align="left">‘SetAttribute’</td><td align="left">set attribute of an object</td></tr><tr><td align="left">‘SetAttributes’</td><td align="left">set attributes of an object</td></tr><tr><td align="left">‘SetDDAttribute’</td><td align="left">set attribute of specified DD tree</td></tr><tr><td align="left">‘SetEnv’</td><td align="left">set environment variable</td></tr><tr><td align="left">‘SetMaxNumMessages’</td><td align="left">set the max. number of messages</td></tr><tr><td align="left">‘SetModified’</td><td align="left">set modified attribute of DD tree</td></tr><tr><td align="left">‘SetPassword’</td><td align="left">set DD admin password</td></tr><tr><td align="left">‘SetRawMode’</td><td align="left">set raw mode</td></tr><tr><td align="left">‘SetUser’</td><td align="left">set DD to user or admin mode</td></tr><tr><td align="left">‘SortChildren’</td><td align="left">sorts an object’s children</td></tr><tr><td align="left">‘SuppressMessage’</td><td align="left">suppress specified message</td></tr><tr><td align="left">‘SyncAutoRenameChild’</td><td align="left">reorder autorenamed children</td></tr><tr><td align="left">‘SyncAutoRenameProperty’</td><td align="left">reorder autorenamed properties</td></tr><tr><td align="left">‘Unlock’</td><td align="left">unlock dsdd MEX DLL</td></tr><tr><td align="left">‘Upgrade’</td><td align="left">upgrade current DD to match current Data Model</td></tr><tr><td align="left">‘Validate’</td><td align="left">validate object</td></tr><tr><td align="left">‘ValidateTree’</td><td align="left">validate object and all subobjects</td></tr><tr><td align="left">‘WriteMessagesToFile’</td><td align="left">write DD messages to file</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;函数&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;试译&lt;/th&gt;&lt;/tr&gt;&lt;/thead
      
    
    </summary>
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/categories/Targetlink/"/>
    
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/tags/Targetlink/"/>
    
  </entry>
  
  <entry>
    <title>Next主题 多说embed.js本地化</title>
    <link href="http://beeant0512.github.io/2016/03/21/duoshuo-embed-1458569563555/"/>
    <id>http://beeant0512.github.io/2016/03/21/duoshuo-embed-1458569563555/</id>
    <published>2016-03-21T14:12:43.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><p>看完<a href="http://www.arao.me/2015/make-duoshuo-faster-qiniu-cdn/" target="_blank" rel="noopener">多说评论不稳定，加载速度慢优化方法</a>一篇文章，自己也试去对自己的next进行修改，但仅仅是为了获取多说embed.js的CDN而还要去注册七牛镜像，这是我自己不愿意的，所以退而求其次，实现本地化也是可以大大的提高多说评论加载速度的。以下就是我的操作过程。</p><h2 id="修改duoshuo-swig"><a href="#修改duoshuo-swig" class="headerlink" title="修改duoshuo.swig"></a>修改<code>duoshuo.swig</code></h2><p>找到到<code>themes/next/layout/_scripts/third-party/comments/duoshuo.swig</code>文件</p><p>删除文件中的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">      var ds = document.createElement(<span class="string">'script'</span>);</span><br><span class="line">      ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</span><br><span class="line">      ds.id = <span class="string">'duoshuo-script'</span>;</span><br><span class="line">      ds.src = (document.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</span><br><span class="line">      ds.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">      (document.getElementById(<span class="string">'footer'</span>)</span><br><span class="line">      || document.getElementsByTagName(<span class="string">'body'</span>)[0]).appendChild(ds);</span><br><span class="line">    &#125;)();</span><br></pre></td></tr></table></figure><p>然后在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.duoshuo_info.ua_enable %&#125;</span><br></pre></td></tr></table></figure><p>前加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> (theme.duoshuo and theme.duoshuo.shortname) or theme.duoshuo_shortname %&#125;</span><br><span class="line">    &lt;script src=<span class="string">"&#123; &#123; url_for(theme.js) &#125; &#125;/src/embed.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>其中embed.js就是多说的embed.js代码</p><h2 id="获取embed-js"><a href="#获取embed-js" class="headerlink" title="获取embed.js"></a>获取embed.js</h2><p>浏览器访问<a href="http://static.duoshuo.com/embed.js" target="_blank" rel="noopener">http://static.duoshuo.com/embed.js</a>，拷贝保存我就不说了，保存的路径保持和<code>&lt;script src=&quot;{ { url_for(theme.js) } }/src/embed.js&quot;&gt;&lt;/script&gt;</code>中的路径一直就可以了。</p><p>由于hexo标签导致<code>hexo g</code>报错，无法生成页面，所以文章中被替换成了<code>{ {</code></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;看完&lt;a href=&quot;http://www.arao.me/2015/make-duoshuo-faster-qiniu-cdn/&quot; target=&quot;
      
    
    </summary>
    
      <category term="hexo" scheme="http://beeant0512.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://beeant0512.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Next主题Tags/Categories Cannot GET /tags/</title>
    <link href="http://beeant0512.github.io/2016/03/20/1458481810166/"/>
    <id>http://beeant0512.github.io/2016/03/20/1458481810166/</id>
    <published>2016-03-20T13:50:10.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h4 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h4><p>新建一个页面，命名为 tags/categories 。命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo new page "tags"</span><br><span class="line"><span class="meta">$</span> hexo new page "categories"</span><br></pre></td></tr></table></figure><h4 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h4><p>编辑刚新建的页面，将页面的类型设置为 tags/categories ，主题将自动为这个页面显示标签云。页面内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2016-03-20 22:01:01</span><br><span class="line">type: "tags"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2016-03-20 22:01:01</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tagcloud</span><br><span class="line">date: 2016-03-20 22:01:01</span><br><span class="line">type: "tags"</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tagcloud</span><br><span class="line">date: 2016-03-20 22:01:01</span><br><span class="line">type: "categories"</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h4><p>在菜单中添加链接。编辑 主题配置文件 ，添加 tags/categories 到 menu 中，如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  categories: /categories</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure><p>z摘自: <a href="http://www.zhihu.com/question/29017171" target="_blank" rel="noopener">http://www.zhihu.com/question/29017171</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h4 id=&quot;步骤一&quot;&gt;&lt;a href=&quot;#步骤一&quot; class=&quot;headerlink&quot; title=&quot;步骤一&quot;&gt;&lt;/a&gt;步骤一&lt;/h4&gt;&lt;p&gt;新建一个
      
    
    </summary>
    
      <category term="hexo" scheme="http://beeant0512.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://beeant0512.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Windows Hexo Github发布问题</title>
    <link href="http://beeant0512.github.io/2016/03/20/hexodeploy-1458477824991/"/>
    <id>http://beeant0512.github.io/2016/03/20/hexodeploy-1458477824991/</id>
    <published>2016-03-20T12:43:44.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h4 id="1-工欲善其事必先利其器"><a href="#1-工欲善其事必先利其器" class="headerlink" title="1.工欲善其事必先利其器"></a>1.工欲善其事必先利其器</h4><hr><p>安装插件 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a></p><h4 id="2-设置-config-yml"><a href="#2-设置-config-yml" class="headerlink" title="2.设置_config.yml"></a>2.设置<code>_config.yml</code></h4><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="3-生成SSH-Key"><a href="#3-生成SSH-Key" class="headerlink" title="3.生成SSH Key"></a>3.生成<code>SSH Key</code></h4><hr><ol><li>打开<code>Git Bash</code>输入以下指令（任意位置点击鼠标右键），检查是否已经存在了<code>SSH keys</code>。<br>如果不存在就没有关系，如果存在的话，直接删除<code>.ssh</code>文件夹里面所有文件。<h6 id="Windows下默认在C-Users-Yourname-ssh路径"><a href="#Windows下默认在C-Users-Yourname-ssh路径" class="headerlink" title="Windows下默认在C:\Users\Yourname\.ssh路径"></a>Windows下默认在<code>C:\Users\Yourname\.ssh</code>路径</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure></li></ol><img src="http://g.hiphotos.baidu.com/exp/w=500/sign=97288315818ba61edfeec82f713597cc/ac6eddc451da81cb1fc606125166d016082431c8.jpg"><ol start="2"><li>输入以下指令（邮箱就是你注册Github时候的邮箱）后，一路回车：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your email address"</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="http://c.hiphotos.baidu.com/exp/w=500/sign=8d2d59cbbb99a9013b355b362d940a58/7acb0a46f21fbe09f97e46cb68600c338644adc9.jpg"><img src="http://d.hiphotos.baidu.com/exp/w=500/sign=420a2bbf4cc2d562f208d0edd71090f3/810a19d8bc3eb135c8c83264a51ea8d3fc1f44e6.jpg"></p><p>3.然后键入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent -s</span><br></pre></td></tr></table></figure><p>4.拷贝<code>id_rsa.pub</code>内容，在github中添加SSH key,具体操作看<a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="noopener">官方说明</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="4-提交hexo-deploy"><a href="#4-提交hexo-deploy" class="headerlink" title="4.提交hexo deploy"></a>4.提交<code>hexo deploy</code></h4><p>cd 到bolg路径中执行<code>hexo generate``hexo deploy</code></p><hr><h3 id="一定要使用Gitbash提交-使用cmd提交会出错"><a href="#一定要使用Gitbash提交-使用cmd提交会出错" class="headerlink" title="一定要使用Gitbash提交 使用cmd提交会出错"></a>一定要使用<code>Gitbash</code>提交 使用<code>cmd</code>提交会出错</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h4 id=&quot;1-工欲善其事必先利其器&quot;&gt;&lt;a href=&quot;#1-工欲善其事必先利其器&quot; class=&quot;headerlink&quot; title=&quot;1.工欲善其
      
    
    </summary>
    
      <category term="hexo" scheme="http://beeant0512.github.io/categories/hexo/"/>
    
      <category term="github" scheme="http://beeant0512.github.io/categories/hexo/github/"/>
    
    
      <category term="hexo" scheme="http://beeant0512.github.io/tags/hexo/"/>
    
      <category term="github" scheme="http://beeant0512.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>TargetLink函数解密 之 set_tlcg_data</title>
    <link href="http://beeant0512.github.io/2016/03/17/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86%E4%B9%8B-set-tlcg-data/"/>
    <id>http://beeant0512.github.io/2016/03/17/TargetLink函数解密之-set-tlcg-data/</id>
    <published>2016-03-17T14:23:31.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h1 id="set-tlcg-data"><a href="#set-tlcg-data" class="headerlink" title="set_tlcg_data"></a>set_tlcg_data</h1><p>set_tlcg_data是用于设置TargetLink模块或Stateflow对象的配置属性的一个函数，其语法如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_tlcg_data(block,data,bCheck,newPropNames)</span><br></pre></td></tr></table></figure><h2 id="输入参数"><a href="#输入参数" class="headerlink" title="输入参数"></a>输入参数</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">block 模块的路径、或模块/Stateflow的操作句柄,通过gcb、gcbh可获得</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data  需要设置的数据,具体结构可使用get_tlcg_data获得</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bCheck <span class="keyword">if</span> set to <span class="number">1</span>, data will be checked <span class="keyword">for</span> consistency (set to <span class="number">0</span> <span class="keyword">if</span> nargin == <span class="number">2</span>)</span><br><span class="line">newPropNames</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bSync 启用/停用同步</span><br></pre></td></tr></table></figure><h2 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数"></a>输出参数</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data 模块的数据</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info 信息（只有当bSync=true时）</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msgStrunc 在数据收集时所产生的信息</span><br></pre></td></tr></table></figure><p>Targetlink和Stateflow的返回数据是不一样的</p><h4 id="info数据"><a href="#info数据" class="headerlink" title="info数据"></a>info数据</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hVariable DD中<span class="string">'variable'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hClass   DD中<span class="string">'class'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hType    DD中<span class="string">'type'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hScaling  DD中<span class="string">'scaling'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.bWritable 所有属性的可写标志位</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.bWritable.&lt;property&gt;各属性是否可写的信息</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.bInteger  是否是整型Int8, Int16, Int32, UInt8, UInt16，UInt32</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.sBaseTypeRename Path of BaseTypeRename <span class="keyword">if</span> it <span class="keyword">exists</span>, otherwise <span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="举例"><a href="#举例" class="headerlink" title="举例:"></a>举例:</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TL_Gain模块的数据主要是<span class="string">'output'</span>和<span class="string">'gain'</span>.</span><br><span class="line">data.output.&lt;blockproperties&gt;</span><br><span class="line">data.gain.&lt;properties&gt;</span><br><span class="line">info.output.&lt;properties&gt;</span><br><span class="line">info.gain.&lt;properties&gt;</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">未配置的Stateflow对象的数据</span><br><span class="line">data.&lt;blockproperties&gt;</span><br><span class="line">info.&lt;blockproperties&gt;</span><br></pre></td></tr></table></figure><p>更多内容参看 set_tlcg_data</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h1 id=&quot;set-tlcg-data&quot;&gt;&lt;a href=&quot;#set-tlcg-data&quot; class=&quot;headerlink&quot; title=&quot;set_
      
    
    </summary>
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/categories/Targetlink/"/>
    
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/tags/Targetlink/"/>
    
  </entry>
  
  <entry>
    <title>TargetLink函数解密 之 get_tlcg_data</title>
    <link href="http://beeant0512.github.io/2016/03/15/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86%E4%B9%8B-get-tlcg-data/"/>
    <id>http://beeant0512.github.io/2016/03/15/TargetLink函数解密之-get-tlcg-data/</id>
    <published>2016-03-15T15:18:07.000Z</published>
    <updated>2019-06-08T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --><h1 id="get-tlcg-data"><a href="#get-tlcg-data" class="headerlink" title="get_tlcg_data"></a>get_tlcg_data</h1><p>get_tlcg_data是用于获取TargetLink模块或Stateflow对象的配置属性的一个函数，其语法如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[data, info, msgStruct] = get_tlcg_data(block, bSync)</span><br></pre></td></tr></table></figure><h2 id="输入参数"><a href="#输入参数" class="headerlink" title="输入参数"></a>输入参数</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">block 模块的路径、或模块/Stateflow的操作句柄,通过gcb、gcbh可获得</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bSync 启用/停用同步</span><br></pre></td></tr></table></figure><h2 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数"></a>输出参数</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data 模块的数据</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info 信息（只有当bSync=true时）</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msgStrunc 在数据收集时所产生的信息</span><br></pre></td></tr></table></figure><p>Targetlink和Stateflow的返回数据是不一样的</p><h4 id="info数据"><a href="#info数据" class="headerlink" title="info数据"></a>info数据</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hVariable DD中<span class="string">'variable'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hClass   DD中<span class="string">'class'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hType    DD中<span class="string">'type'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.hScaling  DD中<span class="string">'scaling'</span>的句柄</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.bWritable 所有属性的可写标志位</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.bWritable.&lt;property&gt;各属性是否可写的信息</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.bInteger  是否是整型Int8, Int16, Int32, UInt8, UInt16，UInt32</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.sBaseTypeRename Path of BaseTypeRename <span class="keyword">if</span> it <span class="keyword">exists</span>, otherwise <span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="举例"><a href="#举例" class="headerlink" title="举例:"></a>举例:</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TL_Gain模块的数据主要是<span class="string">'output'</span>和<span class="string">'gain'</span>.</span><br><span class="line">data.output.&lt;blockproperties&gt;</span><br><span class="line">data.gain.&lt;properties&gt;</span><br><span class="line">info.output.&lt;properties&gt;</span><br><span class="line">info.gain.&lt;properties&gt;</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">未配置的Stateflow对象的数据</span><br><span class="line">data.&lt;blockproperties&gt;</span><br><span class="line">info.&lt;blockproperties&gt;</span><br></pre></td></tr></table></figure><p>更多内容参看 <a href="http://beeant0512.github.io/2016/03/17/TargetLink%E5%87%BD%E6%95%B0%E8%A7%A3%E5%AF%86-%E4%B9%8B-set-tlcg-data/">set_tlcg_data</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Aug 23 2019 23:47:42 GMT+0800 (中国标准时间) --&gt;&lt;h1 id=&quot;get-tlcg-data&quot;&gt;&lt;a href=&quot;#get-tlcg-data&quot; class=&quot;headerlink&quot; title=&quot;get_
      
    
    </summary>
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/categories/Targetlink/"/>
    
    
      <category term="Targetlink" scheme="http://beeant0512.github.io/tags/Targetlink/"/>
    
  </entry>
  
</feed>
